{"version":3,"sources":["components/modal-overlay/modal-overlay.module.css","components/burger-constructor-item/burger-constructor-item.module.css","components/order-details/order-details.module.css","components/orders-queue/orders-queue.module.css","reportWebVitals.ts","services/hooks.ts","components/app-header/app-header.tsx","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","services/constants.ts","components/burger-constructor-item/burger-constructor-item.tsx","services/actions/constructor-action.ts","images/done.png","components/order-details/order-details.tsx","utils/constants.ts","utils/utils.ts","services/middleware/ws-middleware.ts","services/actions/order.ts","services/actions/user.ts","components/constructor-footer/constructor-footer.tsx","components/burger-constructor/burger-constructor.tsx","services/actions/ingredients.ts","components/ingredient/ingredient.tsx","components/ingredients-type/ingredients-type.tsx","components/tabs/tabs.tsx","components/burger-ingredients/burger-ingredients.tsx","pages/main-page.tsx","pages/login.tsx","pages/registration.tsx","pages/forgot-password.tsx","components/order/order.tsx","services/actions/websockets.ts","pages/orders-history/orders-history.tsx","pages/order-page/order-page.tsx","pages/profile/profile.tsx","pages/reset-password.tsx","components/protected-route/protected-route.tsx","components/orders-queue/orders-queue.tsx","pages/feed/feed.tsx","pages/404page.tsx","components/ingredient-details/ingredient-details.tsx","pages/ingredient-page.tsx","components/order-info/order-info.tsx","components/app/app.tsx","services/reducers/constructor-reducer.ts","services/reducers/ingredients.ts","services/reducers/order.ts","services/reducers/user.ts","services/reducers/websockets.ts","services/reducers/index.ts","services/store.ts","index.tsx","pages/profile/profile.module.css","components/app-header/app-header.module.css","components/order/order.module.css","pages/order-page/order-page.module.css","components/order-info/order-info.module.css","pages/feed/feed.module.css","components/ingredient-details/ingredient-details.module.css","components/burger-constructor/burger-constructor.module.css","components/burger-ingredients/burger-ingredients.module.css","components/ingredient/ingredient.module.css","components/modal/modal.module.css","components/tabs/tabs.module.css","pages/orders-history/orders-history.module.css","components/ingredients-type/ingredients-type.module.css","pages/registration.module.css","components/app/app.module.css","components/constructor-footer/constructor-footer.module.css","pages/not-found-page.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useDispatch","dispatchHook","useSelector","selectorHook","Header","history","useHistory","mainIsActive","location","pathname","feedIsActive","profileIsActive","className","headerStyles","header","nav","container","to","activeStyle","color","link","exact","type","logocontainer","ModalOverlay","onClickClose","children","styles","onClick","modalRoot","document","getElementById","Modal","closeHandler","useEffect","close","e","key","window","addEventListener","removeEventListener","ReactDOM","createPortal","modal","modalHeader","modalHeaderRight","closeButton","stopPropagation","ADD_INGREDIENT_TO_CONSTRUCTOR","DELETE_FROM_CONSTRUCTOR","CHANGE_INGREDIENTS_ORDER","RESET_CONSTRUCTOR","GET_INGREDIENTS_REQUEST","GET_INGREDIENTS_SUCCESS","GET_INGREDIENTS_ERROR","SET_INGREDIENT_DETAILS","GET_ORDER_NUMBER_REQUEST","GET_ORDER_NUMBER_SUCCESS","GET_ORDER_NUMBER_ERROR","GET_ORDER_CARD_DETAILS_REQUEST","GET_ORDER_CARD_DETAILS_SUCCESS","GET_ORDER_CARD_DETAILS_ERROR","GET_USER_DATA_REQUEST","GET_USER_REGISTER_SUCCESS","GET_USER_DATA_ERROR","GET_USER_LOGIN_SUCCESS","GET_USER_FORGOT_PASSWORD_SUCCESS","GET_USER_RESET_PASSWORD_SUCCESS","GET_USER_INFO_SUCCESS","GET_USER_REFRESH_TOKEN_SUCCESS","GET_USER_INFO_UPDATE_SUCCESS","GET_USER_LOGOUT_SUCCESS","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSED","WS_CONNECTION_START","WS_CONNECTION_START_PROFILE","WS_GET_ORDERS","BurgerConstructorItem","uniqueId","index","_id","price","name","image","deleteItem","ref","useRef","dispatch","moveIngredient","dragIndex","hoverIndex","changeIngredientsOrder","useDrop","accept","hover","item","monitor","current","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","clientOffset","getClientOffset","hoverClientY","y","drop","useDrag","collect","isDragging","drag","elementWithDragIcon","data-test-id","text","thumbnail","handleClose","OrderDetails","orderId","succeedOrder","src","done","alt","URL","getCookie","matches","cookie","match","RegExp","replace","decodeURIComponent","undefined","setCookie","value","props","exp","expires","d","Date","setTime","getTime","toUTCString","updatedCookie","propName","propValue","wsUrl","wsActions","getStatus","status","getDate","createdAt","date","formatRelative","locale","ru","getOrderNumberErrorAction","getOrderNumber","orderedList","fetch","method","cache","headers","body","JSON","stringify","ingredients","res","ok","json","Promise","reject","order","number","catch","error","console","log","getOrderCardDetails","orderCardDetails","orders","getUserInfo","localStorage","getItem","success","user","message","getUserRefreshToken","token","setItem","refreshToken","accessToken","split","getUserLogout","redirect","referrerPolicy","ConstructorFooter","state","constructorStore","constructorIngredients","topBun","bottomBun","isUserLoggedIn","userData","useState","detailsOpen","setDetailsOpen","totalSum","reduce","acc","allIngredients","map","size","BurgerConstructor","ingredientType","dropTarget","deleteHandler","id","mainIngredients","filter","element","isLocked","mainIngredientsList","getIngredients","data","err","setIngredientDetails","ingredient","Ingredient","useLocation","dragRef","opacity","countIt","ingredientCard","style","background","count","IngredientsType","typeName","list","ingredientItem","Tabs","onTabClick","tabClickHandler","tabsStyles","tabs","active","BurgerIngredients","currentTab","setCurrentTab","bunRef","sauceRef","stuffingRef","refs","scrollRef","filteredIngredients","section","curRef","scrollIntoView","behavior","handleScrollToType","ingredientList","onScroll","scrollContainerPosition","bunHeaderPosition","sauceHeaderPosition","stuffingHeaderPosition","firstDiff","Math","abs","secondDiff","thirdDiff","MainPage","app","DndProvider","backend","HTML5Backend","LoginPage","email","password","setValue","onChange","target","from","wrapper","title","onSubmit","preventDefault","alert","getUserLogin","form","placeholder","errorText","additional","line","RegistrationPage","getUserRegister","ForgotPasswordPage","getUserEmail","setEmail","getUserForgotPassword","Order","orderNumber","ingredientsId","orderedIngredients","sum","forEach","foundIngredient","find","includes","push","IngredientImg","length","orderCardStyles","last","zIndex","icon","image_mobile","lastAmount","fontColor","icons","wsConnectionClosed","OrdersHistoryPage","feedOrders","wsStore","orderItem","OrderPage","useParams","ingredientsRequest","ingredientsError","getQuantity","ingredientsList","right","left","ProfilePage","userName","setUserName","userEmail","setUserEmail","userPassword","setUserPassword","disabledInput","setInputDisabled","showButtons","setShowButtons","onIconClick","width","path","disabled","buttons","ResetPasswordPage","isResetPassword","ProtectedRoute","rest","init","a","render","OrdersQueue","total","totalToday","doneOrders","pendingOrders","statusColumns","column","numbers","numbersColumn","slice","block","FeedPage","NotFound404","IngredientDetails","ingredientDetails","EnergyValues","values","valueItem","calories","proteins","fat","carbohydrates","IngredientPage","currentIngredient","OrderInfo","Number","App","action","closeModalHandler","goBack","initialConstructor","initialState","orderRequest","orderRequestError","isShownOrderDetails","userDataRequest","userDataError","wsConnected","rootReducer","combineReducers","nanoid","dragItem","splice","newArr","payload","wsFeedOrdersMiddleware","wsStart","wsStartProfile","wsSendMessage","onOpen","onClose","onError","getFeedOrders","store","socket","next","WebSocket","onopen","event","onerror","onmessage","parsedData","parse","restParsedData","onclose","send","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","createStore","StrictMode","basename"],"mappings":"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","file":"static/js/main.6768ef06.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"modal-overlay_container__1Gyfy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"elementWithDragIcon\":\"burger-constructor-item_elementWithDragIcon__u06sL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"order-details_container__3FMJQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"orders-queue_container__3lr_z\",\"statusColumns\":\"orders-queue_statusColumns__264s9\",\"total\":\"orders-queue_total__a7itF\",\"column\":\"orders-queue_column__1_9jI\",\"numbers\":\"orders-queue_numbers__19NOy\",\"numbersColumn\":\"orders-queue_numbersColumn__3KFsH\",\"block\":\"orders-queue_block__2wgUD\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n    TypedUseSelectorHook,\r\n    useDispatch as dispatchHook,\r\n    useSelector as selectorHook\r\n  } from 'react-redux';\r\n  import { AppDispatch, RootState } from './store';\r\n  \r\n  export const useDispatch = () => dispatchHook<AppDispatch>();\r\n  export const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\r\n  ","import React from 'react';\r\nimport headerStyles from './app-header.module.css';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\n\r\nimport { BurgerIcon, ListIcon, Logo, ProfileIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\n\r\nexport const Header = () => {\r\n    const history = useHistory();\r\n    \r\n    const mainIsActive = history.location.pathname === '/'; \r\n    const feedIsActive = history.location.pathname === '/feed';\r\n    const profileIsActive = history.location.pathname === '/profile' || history.location.pathname === '/profile/orders';\r\n\r\n    return(\r\n        <header className={`${headerStyles.header} pb-4 pt-4`} >\r\n            <nav className={headerStyles.nav} >\r\n                <div className={`${headerStyles.container}`}>\r\n                    <div className={`${headerStyles.container} pr-5 pb-4 pt-4`}>\r\n                        <NavLink   to={{pathname: `/`}}\r\n                            activeStyle={{color: \"#F2F2F3\"}}\r\n                            className={`${headerStyles.link} text text_type_main-default ml-2 text_color_inactive`}\r\n                            exact={true}\r\n                        >\r\n                            <BurgerIcon type={mainIsActive ? 'primary' : 'secondary'}/>\r\n                            <p className=\"text text_type_main-default ml-2\">\r\n                                Конструктор\r\n                            </p>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className={`${headerStyles.container} ml-2 pl-5 pr-5 pb-4 pt-4`}>\r\n                        <NavLink  to={{pathname: `/feed`}}\r\n                                activeStyle={{color: \"#F2F2F3\"}}\r\n                                className={`${headerStyles.link} text text_type_main-default ml-2  ml-2 text_color_inactive`}\r\n                                exact={true}\r\n                            >\r\n                            <ListIcon type={feedIsActive ? 'primary' : 'secondary'} />\r\n                            <p className={`text text_type_main-default ml-2`}>\r\n                                Лента заказов\r\n                            </p>\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n                <NavLink to='/'\r\n                    className={headerStyles.logocontainer}>\r\n                    <Logo />\r\n                </NavLink>\r\n                <div className={`${headerStyles.container} pl-5 pb-4 pt-4`}>\r\n                    <NavLink   to={{pathname: `/profile`}}\r\n                        activeStyle={{color: \"#F2F2F3\"}}\r\n                        className={`${headerStyles.link} text text_type_main-default ml-2 text_color_inactive`}\r\n                    >\r\n                        <ProfileIcon type={profileIsActive ? 'primary' : 'secondary'}/>\r\n                        <p className=\"text text_type_main-default ml-2\">\r\n                            Личный кабинет\r\n                        </p>\r\n                    </NavLink>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    )\r\n};","import React, { FC } from \"react\";\r\n\r\nimport styles from \"./modal-overlay.module.css\";\r\n\r\ninterface IModalOverlay {\r\n    onClickClose: (e: React.SyntheticEvent<EventTarget>) => void\r\n}\r\n\r\nconst ModalOverlay: FC<IModalOverlay> = ({onClickClose, children}) => {\r\n\r\n    return(\r\n        <div className={styles.container} \r\n            onClick={onClickClose}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModalOverlay;","import React, { FC, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport styles from \"./modal.module.css\";\r\nimport ModalOverlay from \"../modal-overlay/modal-overlay\";\r\nimport { CloseIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\nconst modalRoot = document.getElementById(\"react-modals\");\r\n\r\ninterface IModalProps {\r\n    header?: string\r\n    closeHandler: () => void\r\n}\r\n\r\nexport const Modal: FC<IModalProps> = ({ children, header, closeHandler }) => {\r\n    useEffect(() => {\r\n        const close = (e: KeyboardEvent) => {\r\n            if(e.key === \"Escape\"){\r\n                closeHandler()\r\n            }\r\n        }\r\n        window.addEventListener('keydown', close)\r\n        return () => window.removeEventListener('keydown', close)\r\n    },[closeHandler])\r\n\r\n    if (modalRoot) {\r\n    return ReactDOM.createPortal(\r\n        <>\r\n            <div className={styles.modal}>\r\n                <div className={header ? styles.modalHeader : styles.modalHeaderRight}>\r\n                    {header && <h2 className=\"text text_type_main-large\">{header}</h2>}\r\n                    <button \r\n                        className={styles.closeButton} \r\n                        onClick={(e)=> {\r\n                            e.stopPropagation();\r\n                            closeHandler && closeHandler()\r\n                            }}\r\n                    >\r\n                        <CloseIcon type=\"primary\"/>\r\n                    </button>\r\n                </div>\r\n                {children}\r\n            </div>\r\n            <ModalOverlay onClickClose={closeHandler} />\r\n        </>, \r\n        modalRoot\r\n    )}\r\n    return <></>\r\n}\r\n","export const ADD_INGREDIENT_TO_CONSTRUCTOR:'ADD_INGREDIENT_TO_CONSTRUCTOR' = 'ADD_INGREDIENT_TO_CONSTRUCTOR';\r\nexport const DELETE_FROM_CONSTRUCTOR: 'DELETE_FROM_CONSTRUCTOR' = 'DELETE_FROM_CONSTRUCTOR';\r\nexport const CHANGE_INGREDIENTS_ORDER: 'CHANGE_INGREDIENTS_ORDER' = 'CHANGE_INGREDIENTS_ORDER';\r\nexport const RESET_CONSTRUCTOR: 'RESET_CONSTRUCTOR' = 'RESET_CONSTRUCTOR';\r\n\r\nexport const GET_INGREDIENTS_REQUEST: 'GET_INGREDIENTS_REQUEST' = 'GET_INGREDIENTS_REQUEST';\r\nexport const GET_INGREDIENTS_SUCCESS: 'GET_INGREDIENTS_SUCCESS' = 'GET_INGREDIENTS_SUCCESS';\r\nexport const GET_INGREDIENTS_ERROR: 'GET_INGREDIENTS_ERROR' = 'GET_INGREDIENTS_ERROR';\r\nexport const SET_INGREDIENT_DETAILS: 'SET_INGREDIENT_DETAILS' = 'SET_INGREDIENT_DETAILS';\r\n\r\nexport const GET_ORDER_NUMBER_REQUEST: 'GET_ORDER_NUMBER_REQUEST' = 'GET_ORDER_NUMBER_REQUEST';\r\nexport const GET_ORDER_NUMBER_SUCCESS: 'GET_ORDER_NUMBER_SUCCESS' = 'GET_ORDER_NUMBER_SUCCESS';\r\nexport const GET_ORDER_NUMBER_ERROR: 'GET_ORDER_NUMBER_ERROR' = 'GET_ORDER_NUMBER_ERROR';\r\n\r\nexport const GET_ORDER_CARD_DETAILS_REQUEST: 'GET_ORDER_CARD_DETAILS_REQUEST' = 'GET_ORDER_CARD_DETAILS_REQUEST';\r\nexport const GET_ORDER_CARD_DETAILS_SUCCESS: 'GET_ORDER_CARD_DETAILS_SUCCESS' = 'GET_ORDER_CARD_DETAILS_SUCCESS';\r\nexport const GET_ORDER_CARD_DETAILS_ERROR: 'GET_ORDER_CARD_DETAILS_ERROR' = 'GET_ORDER_CARD_DETAILS_ERROR'; \r\n\r\nexport const GET_USER_DATA_REQUEST: 'GET_USER_DATA_REQUEST' = 'GET_USER_DATA_REQUEST';\r\nexport const GET_USER_REGISTER_SUCCESS: 'GET_USER_REGISTER_SUCCESS' = 'GET_USER_REGISTER_SUCCESS';\r\nexport const GET_USER_DATA_ERROR: 'GET_USER_DATA_ERROR' = 'GET_USER_DATA_ERROR';\r\nexport const GET_USER_LOGIN_SUCCESS: 'GET_USER_LOGIN_SUCCESS' = 'GET_USER_LOGIN_SUCCESS';\r\nexport const GET_USER_FORGOT_PASSWORD_SUCCESS: 'GET_USER_FORGOT_PASSWORD_SUCCESS' = 'GET_USER_FORGOT_PASSWORD_SUCCESS';\r\nexport const GET_USER_RESET_PASSWORD_SUCCESS: 'GET_USER_RESET_PASSWORD_SUCCESS' = 'GET_USER_RESET_PASSWORD_SUCCESS';\r\nexport const GET_USER_INFO_SUCCESS: 'GET_USER_INFO_SUCCESS' = 'GET_USER_INFO_SUCCESS';\r\nexport const GET_USER_REFRESH_TOKEN_SUCCESS: 'GET_USER_REFRESH_TOKEN_SUCCESS' = 'GET_USER_REFRESH_TOKEN_SUCCESS';\r\nexport const GET_USER_INFO_UPDATE_SUCCESS: 'GET_USER_INFO_UPDATE_SUCCESS' = 'GET_USER_INFO_UPDATE_SUCCESS';\r\nexport const GET_USER_LOGOUT_SUCCESS: 'GET_USER_LOGOUT_SUCCESS' = 'GET_USER_LOGOUT_SUCCESS';\r\n\r\nexport const WS_CONNECTION_SUCCESS: 'WS_CONNECTION_SUCCESS' = 'WS_CONNECTION_SUCCESS';\r\nexport const WS_CONNECTION_ERROR: 'WS_CONNECTION_ERROR' = 'WS_CONNECTION_ERROR';\r\nexport const WS_CONNECTION_CLOSED: 'WS_CONNECTION_CLOSED' = 'WS_CONNECTION_CLOSED';\r\n\r\nexport const WS_CONNECTION_START: 'WS_CONNECTION_START' = 'WS_CONNECTION_START';\r\nexport const WS_CONNECTION_START_PROFILE: 'WS_CONNECTION_START_PROFILE' ='WS_CONNECTION_START_PROFILE';\r\nexport const WS_CONNECTION_END: 'WS_CONNECTION_END' = 'WS_CONNECTION_END';\r\nexport const WS_PROFILE_CONNECTION_START: 'WS_PROFILE_CONNECTION_START' = 'WS_PROFILE_CONNECTION_START';\r\n\r\nexport const WS_SEND_MESSAGE: 'WS_SEND_MESSAGE' = 'WS_SEND_MESSAGE';\r\nexport const WS_GET_ORDERS: 'WS_GET_ORDERS' = 'WS_GET_ORDERS';","import React, { useRef, FC } from 'react';\r\nimport { useDrop, useDrag } from 'react-dnd';\r\nimport { useDispatch } from '../../services/hooks';\r\n\r\nimport { ConstructorElement, DragIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { changeIngredientsOrder } from '../../services/actions/constructor-action';\r\nimport styles from './burger-constructor-item.module.css';\r\n\r\ninterface IBurgerConstructorItem {\r\n    uniqueId: string,\r\n    index: number,\r\n    _id: string,\r\n    price: number,\r\n    name: string,\r\n    image: string,\r\n    deleteItem: (id: string) => void\r\n}\r\n\r\ninterface IItem {\r\n    index: number,\r\n    id: string,\r\n    type: string,\r\n}\r\n\r\nconst BurgerConstructorItem: FC<IBurgerConstructorItem> = ({ uniqueId, index, _id, price, name, image, deleteItem }) => {\r\n    const ref = useRef<HTMLDivElement>(null);\r\n    const dispatch = useDispatch(); \r\n    const moveIngredient = (dragIndex: number, hoverIndex: number) => {\r\n        dispatch(changeIngredientsOrder( dragIndex, hoverIndex))\r\n    };\r\n\r\n    const [, drop] = useDrop({\r\n        accept: 'constructor-ingredient',\r\n        hover(item: IItem, monitor) {\r\n            if (!ref.current) {\r\n                return;\r\n            }\r\n            const dragIndex = item.index;\r\n            const hoverIndex = index;\r\n            if (dragIndex === hoverIndex) {\r\n                return;\r\n            }\r\n            const hoverBoundingRect = ref.current?.getBoundingClientRect();\r\n            const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n            const clientOffset = monitor.getClientOffset();\r\n            const hoverClientY = clientOffset && clientOffset.y - hoverBoundingRect.top;\r\n            if (hoverClientY && dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n                return;\r\n            }\r\n            if (hoverClientY && dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n                return;\r\n            }\r\n            moveIngredient(dragIndex, hoverIndex);\r\n            item.index = hoverIndex;\r\n        },\r\n    });\r\n\r\n    const [isDragging, drag] = useDrag({\r\n        type: 'constructor-ingredient',\r\n        item: { type: 'constructor-ingredient', name, index, image, price, _id, uniqueId },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n        }),\r\n    });\r\n    \r\n    const opacity = isDragging ? 0 : 1;\r\n    drag(drop(ref));\r\n\r\n    return (\r\n            <div ref={ref} className={styles.elementWithDragIcon} >\r\n                <DragIcon type=\"primary\" />\r\n                <ConstructorElement\r\n                    data-test-id='constructor-ingredient'\r\n                    text={name}\r\n                    price={price}\r\n                    thumbnail={image}\r\n                    handleClose={() => deleteItem(uniqueId)}\r\n                />\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default BurgerConstructorItem;","import {\r\n    ADD_INGREDIENT_TO_CONSTRUCTOR,\r\n    DELETE_FROM_CONSTRUCTOR,\r\n    CHANGE_INGREDIENTS_ORDER,\r\n    RESET_CONSTRUCTOR\r\n} from '../constants';\r\n\r\nexport interface IAddIngredientToConstructor {\r\n    readonly type: typeof ADD_INGREDIENT_TO_CONSTRUCTOR;\r\n    readonly ingredientType: string,\r\n    readonly name: string,\r\n    readonly image: string;\r\n    readonly price: number;\r\n    readonly _id: string;\r\n}\r\n\r\nexport interface IDeleteIngredient {\r\n    readonly type: typeof DELETE_FROM_CONSTRUCTOR;\r\n    readonly uniqueId: string;\r\n}\r\n\r\nexport interface IChangeIngredientsOrder {\r\n    readonly type: typeof CHANGE_INGREDIENTS_ORDER;\r\n    readonly dragIndex: number;\r\n    readonly hoverIndex: number;\r\n}\r\n\r\nexport interface IResetContructor {\r\n    readonly type: typeof RESET_CONSTRUCTOR;\r\n}\r\n\r\nexport type TConstructorActions = \r\n    IAddIngredientToConstructor |\r\n    IDeleteIngredient | \r\n    IChangeIngredientsOrder |\r\n    IResetContructor |\r\n    any;\r\n\r\n\r\nexport const addIngredientToConstructor = (ingredientType: string, name: string, image: string, price: number, _id: string): IAddIngredientToConstructor  => ({\r\n    type: ADD_INGREDIENT_TO_CONSTRUCTOR,\r\n    ingredientType, name, image, price, _id\r\n});\r\n\r\nexport const  deleteIngredient = (uniqueId: string): IDeleteIngredient => ({\r\n    type: DELETE_FROM_CONSTRUCTOR,\r\n    uniqueId\r\n});\r\n\r\nexport const changeIngredientsOrder = ( dragIndex: number, hoverIndex: number): IChangeIngredientsOrder => ({\r\n    type: CHANGE_INGREDIENTS_ORDER,\r\n    dragIndex, \r\n    hoverIndex\r\n})\r\n\r\nexport const resetConstructor = (): IResetContructor => ({\r\n    type: RESET_CONSTRUCTOR,\r\n});","export default __webpack_public_path__ + \"static/media/done.f2873d36.png\";","import React, { FC } from 'react';\r\n\r\nimport styles from './order-details.module.css';\r\nimport done from '../../images/done.png';\r\n\r\ninterface IOrderDetails {\r\n    orderId: number\r\n  }\r\n\r\nconst OrderDetails: FC<IOrderDetails> = ({orderId}) => {\r\n    const succeedOrder = (\r\n        <>\r\n            <h2 className=\"text text_type_digits-large mb-4\">{orderId}</h2>\r\n            <span className=\"text text_type_main-medium mb-15\">идентификатор заказа</span>\r\n            <img className=\"mb-15\" src={done} alt=\"\"/>\r\n            <span className=\"text text_type_main-default mb-2\">Ваш заказ начали готовить</span>\r\n            <span className=\"text text_type_main-default text_color_inactive mb-10\">Дождитесь готовности на орбитальной станции</span>\r\n        </>\r\n    );\r\n    return (\r\n        <div className={styles.container}>\r\n            {orderId ? succeedOrder : <p>Загрузка...</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OrderDetails;","export const URL = \"https://norma.nomoreparties.space/api\";","import { formatRelative} from 'date-fns';\r\nimport { ru } from 'date-fns/locale';\r\n\r\n/* eslint-disable no-useless-escape */\r\nexport const getCookie = (name: string) => {\r\n    const matches = document.cookie.match(\r\n        new RegExp('(?:^|; )' + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)')\r\n    );\r\n    return matches ? decodeURIComponent(matches[1]) : undefined;\r\n};\r\n\r\nexport function setCookie(name: string, value: string | null, props: any | null) {\r\n    props = props || {};\r\n    let exp = props.expires;\r\n    if (typeof exp == 'number' && exp) {\r\n        const d = new Date();\r\n        d.setTime(d.getTime() + exp * 1000);\r\n        exp = props.expires = d;\r\n    }\r\n    if (exp && exp.toUTCString) {\r\n        props.expires = exp.toUTCString();\r\n    }\r\n    // value = encodeURIComponent(value);\r\n    let updatedCookie = name + '=' + value + '; path=/';\r\n    for (const propName in props) {\r\n        updatedCookie += '; ' + propName;\r\n        const propValue = props[propName];\r\n        if (propValue !== true) {\r\n        updatedCookie += '=' + propValue;\r\n        }\r\n    }\r\n    document.cookie = updatedCookie;\r\n    };\r\n\r\n    export function deleteCookie(name: string) {\r\n        setCookie(name, null, { expires: -1 });\r\n    };\r\n    \r\n    // export const sortByDate = (a: Date, b: Date) => {\r\n    //     return new Date(b) - new Date(a);\r\n    // }\r\n\r\n    export const getStatus = (status: 'done' | 'pending' | 'created') => {\r\n        switch(status) {\r\n            case 'pending': \r\n                return 'Готовится'\r\n            case 'done': \r\n                return 'Выполнен'\r\n            case 'created': \r\n                return 'Создан'\r\n            default: \r\n                return ''\r\n        }\r\n    }\r\n\r\n    export const getDate = (createdAt: string) => {\r\n        const date = formatRelative(new Date(createdAt), new Date(), { locale: ru, });\r\n        return `${date} i-GMT+3`\r\n    };\r\n","import { getCookie } from \"../../utils/utils\";\r\nimport { RootState } from '../store';\r\nimport { Middleware } from 'redux';\r\nimport { wsActions } from \"../store\";\r\n\r\nexport type WsActions = typeof wsActions;\r\n\r\nexport const wsMiddleware = (wsUrl: string, wsActions: WsActions): Middleware<{}, RootState> => {\r\n    const socketMiddleware: Middleware<{}, RootState>  = (store) => {\r\n        let socket: WebSocket | null= null;\r\n\r\n        return next => action => {\r\n            const { dispatch } = store;\r\n            const { type, payload } = action;\r\n            const { \r\n                wsStart, \r\n                wsStartProfile,\r\n                wsSendMessage, \r\n                onOpen, \r\n                onClose, \r\n                onError, \r\n                getFeedOrders\r\n            } = wsActions;\r\n            const accessToken = getCookie('accessToken');\r\n\r\n            if (type === wsStart) {\r\n                socket = new WebSocket(`${wsUrl}/all`)\r\n            }\r\n\r\n            if (type === wsStartProfile) {\r\n                socket = new WebSocket(`${wsUrl}?token=${accessToken}`)\r\n            }\r\n\r\n            if(socket) {\r\n                socket.onopen = event => {\r\n                    dispatch({ type: onOpen, payload: event });\r\n                }\r\n                socket.onerror = event => {\r\n                    dispatch({ type: onError, payload: event });\r\n                }\r\n                socket.onmessage = event => {\r\n                    const { data } = event;\r\n                    const parsedData = JSON.parse(data);\r\n                    const { success, ...restParsedData } = parsedData;\r\n                    dispatch({\r\n                            type: getFeedOrders,\r\n                            payload: restParsedData\r\n                    });\r\n                }\r\n                socket.onclose = event => {\r\n                    dispatch({ type: onClose, payload: event });\r\n                };\r\n                if (type === wsSendMessage && accessToken) {\r\n                    const message = { payload, token: accessToken };\r\n                    socket.send(JSON.stringify(message))\r\n                }\r\n            }\r\n            next(action);\r\n        }\r\n    }\r\n    return socketMiddleware;\r\n}","import { \r\n    GET_ORDER_NUMBER_REQUEST,\r\n    GET_ORDER_NUMBER_SUCCESS,\r\n    GET_ORDER_NUMBER_ERROR,\r\n    GET_ORDER_CARD_DETAILS_REQUEST,\r\n    GET_ORDER_CARD_DETAILS_SUCCESS,\r\n    GET_ORDER_CARD_DETAILS_ERROR,  \r\n} from '../constants';\r\nimport { AppDispatch, AppThunk } from '../store';\r\nimport { TIngredientId, TOrder } from '../types/data'\r\nimport {URL} from '../../utils/constants';\r\nimport { getCookie } from '../../utils/utils';\r\n\r\nexport interface IGetOrderNumberRequest {\r\n    readonly type: typeof GET_ORDER_NUMBER_REQUEST\r\n}\r\n\r\nexport interface IGetOrderNumberSuccess {\r\n    readonly type: typeof GET_ORDER_NUMBER_SUCCESS;\r\n    readonly orderId: number\r\n}\r\n\r\nexport interface IGetOrderNumberError {\r\n    readonly type: typeof GET_ORDER_NUMBER_ERROR;\r\n}\r\n\r\nexport interface IGetOrderCardDetailsRequest {\r\n    readonly type: typeof GET_ORDER_CARD_DETAILS_REQUEST;\r\n}\r\n\r\nexport interface IGetOrderCardDetailsSuccess {\r\n    readonly type: typeof GET_ORDER_CARD_DETAILS_SUCCESS;\r\n    readonly orderCardDetails:  TOrder\r\n}\r\n\r\nexport interface IGetOrderCardDetailsError {\r\n    readonly type: typeof GET_ORDER_CARD_DETAILS_ERROR;\r\n}\r\n\r\nexport type TOrderActions = \r\n    | IGetOrderNumberRequest \r\n    | IGetOrderNumberSuccess \r\n    | IGetOrderNumberError \r\n    | IGetOrderCardDetailsRequest\r\n    | IGetOrderCardDetailsSuccess\r\n    | IGetOrderCardDetailsError\r\n    | any;\r\n\r\nexport const getOrderNumberRequestAction = (): IGetOrderNumberRequest => ({\r\n    type: GET_ORDER_NUMBER_REQUEST,\r\n});\r\n\r\nexport const getOrderNumberSuccessAction = (orderId: number): IGetOrderNumberSuccess => ({\r\n    type: GET_ORDER_NUMBER_SUCCESS,\r\n    orderId\r\n})\r\n\r\nexport const getOrderNumberErrorAction = (): IGetOrderNumberError => ({\r\n    type: GET_ORDER_NUMBER_ERROR,\r\n})\r\n\r\nexport const getOrderCardDetailsRequest = (): IGetOrderCardDetailsRequest => ({\r\n    type: GET_ORDER_CARD_DETAILS_REQUEST\r\n})\r\n\r\nexport const getOrderCardDetailsSuccess = (orderCardDetails: TOrder): IGetOrderCardDetailsSuccess => ({\r\n    type: GET_ORDER_CARD_DETAILS_SUCCESS,\r\n    orderCardDetails\r\n})\r\n\r\nexport const getOrderCardDetailsError = (): IGetOrderCardDetailsError => ({\r\n    type: GET_ORDER_CARD_DETAILS_ERROR,\r\n})\r\n\r\n\r\nexport const getOrderNumber: AppThunk = (orderedList: ReadonlyArray<TIngredientId>) => (dispatch: AppDispatch) => {\r\n    dispatch(getOrderNumberRequestAction());\r\n    fetch(`${URL}/orders`, {\r\n        method: 'POST',\r\n        cache: 'no-cache',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + getCookie('accessToken')\r\n        },\r\n        body: JSON.stringify({\r\n                ingredients: orderedList\r\n        })\r\n    })\r\n        .then((res) => {\r\n            if(!res.ok) {\r\n                return Promise.reject(res.status);\r\n            }\r\n            return res.json()\r\n        })\r\n        .then((res) => dispatch(getOrderNumberSuccessAction(res.order.number))\r\n        )\r\n        .catch(error => {\r\n            console.log('Error message: ' + error)\r\n            dispatch(getOrderNumberErrorAction)}\r\n        )\r\n        \r\n};\r\n\r\nexport const getOrderCardDetails: AppThunk = (number: number) => (dispatch: AppDispatch) => {\r\n    dispatch (getOrderCardDetailsRequest());\r\n    fetch(`${URL}/orders/${number}`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        }\r\n    })\r\n    .then((res) => {\r\n        if(!res.ok) {\r\n            return Promise.reject(res.status);\r\n        }\r\n        return res.json()\r\n    })\r\n    .then((res) => dispatch(getOrderCardDetailsSuccess(res.orders[0])))\r\n    .catch(error => {\r\n        console.log('Error message: ' + error)\r\n        dispatch(getOrderCardDetailsError())\r\n    })\r\n}\r\n","import {\r\n    GET_USER_DATA_REQUEST,\r\n    GET_USER_DATA_ERROR,\r\n\r\n    GET_USER_REGISTER_SUCCESS,\r\n    GET_USER_LOGIN_SUCCESS,\r\n    GET_USER_FORGOT_PASSWORD_SUCCESS,\r\n    GET_USER_RESET_PASSWORD_SUCCESS,\r\n    GET_USER_INFO_SUCCESS,\r\n    GET_USER_REFRESH_TOKEN_SUCCESS,\r\n    GET_USER_INFO_UPDATE_SUCCESS,\r\n    GET_USER_LOGOUT_SUCCESS\r\n} from '../constants';\r\nimport { AppDispatch, AppThunk } from '../store';\r\n\r\nimport { URL } from '../../utils/constants';\r\nimport { setCookie, getCookie, deleteCookie } from '../../utils/utils';\r\nimport { TUser, TAuthorization } from '../types/data';\r\n\r\nexport interface IUserDataRequestAction {\r\n    readonly type: typeof GET_USER_DATA_REQUEST\r\n}\r\n\r\nexport interface IRegisterSuccessAction {\r\n    readonly type: typeof GET_USER_REGISTER_SUCCESS,\r\n    user: TUser\r\n}\r\n\r\nexport interface IUserDataErrorAction {\r\n    readonly type: typeof GET_USER_DATA_ERROR,\r\n}\r\n\r\nexport interface ILoginSuccessAction {\r\n    readonly type: typeof GET_USER_LOGIN_SUCCESS,\r\n    user: TUser\r\n}\r\n\r\nexport interface IForgotPasswordSuccessAction {\r\n    readonly type: typeof GET_USER_FORGOT_PASSWORD_SUCCESS,\r\n}\r\n\r\nexport interface IResetPasswordSuccessAction {\r\n    readonly type: typeof GET_USER_RESET_PASSWORD_SUCCESS,\r\n}\r\n\r\nexport interface IUserInforSuccessAction {\r\n    readonly type: typeof GET_USER_INFO_SUCCESS,\r\n    readonly user: TUser\r\n}\r\n\r\nexport interface IRefreshTokenSuccessAction {\r\n    readonly type: typeof GET_USER_REFRESH_TOKEN_SUCCESS,\r\n    readonly payload: TAuthorization\r\n}\r\nexport interface IUserInfoUpdateSuccessAction {\r\n    readonly type: typeof GET_USER_INFO_UPDATE_SUCCESS,\r\n    readonly user: TUser\r\n}\r\n\r\nexport interface IUserLogoutSuccessAction {\r\n    readonly type: typeof GET_USER_LOGOUT_SUCCESS\r\n}\r\n\r\nexport type TUserActions = \r\n    IUserDataRequestAction |\r\n    IUserDataErrorAction |\r\n    IRegisterSuccessAction |\r\n    ILoginSuccessAction |\r\n    IForgotPasswordSuccessAction |\r\n    IResetPasswordSuccessAction |\r\n    IUserInforSuccessAction |\r\n    IRefreshTokenSuccessAction |\r\n    IUserInfoUpdateSuccessAction |\r\n    IUserLogoutSuccessAction |\r\n    any;\r\n\r\nexport const getUserRegister: AppThunk = (email: string, password: string, name: string) => (dispatch: AppDispatch) => {\r\n    dispatch({\r\n        type: GET_USER_DATA_REQUEST\r\n    });\r\n        fetch(`${URL}/auth/register`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n        body: JSON.stringify({\r\n            email,\r\n            password,\r\n            name\r\n        })\r\n        })\r\n        .then((res) => {\r\n            if(!res.ok) {\r\n                return Promise.reject(res.status);\r\n            }   \r\n            return res.json();\r\n            })\r\n        .then((res) => {\r\n            dispatch({\r\n                type: GET_USER_REGISTER_SUCCESS, \r\n                user: res.user,\r\n            })\r\n            return res;\r\n        })\r\n        .catch((error) => {\r\n            console.log('Error reister message: ' + error)\r\n            dispatch({\r\n                type: GET_USER_DATA_ERROR,\r\n            })\r\n        })\r\n};\r\n\r\nexport const getUserLogin: AppThunk = (email: string, password: string) => (dispatch: AppDispatch) => {\r\n    dispatch({\r\n        type: GET_USER_DATA_REQUEST\r\n        });\r\n        fetch(`${URL}/auth/login`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email,\r\n                password,\r\n            })\r\n        })\r\n        .then((res) => {\r\n            if (res.status === 401) {\r\n                alert('E-mail или пароль введены неправильно. Попробуйте ещё раз.');\r\n            }\r\n            if(!res.ok) {\r\n                return Promise.reject(res.status);\r\n            }\r\n            return res.json();\r\n        })\r\n        .then((res) => {\r\n            dispatch({\r\n                type: GET_USER_LOGIN_SUCCESS, \r\n                user: res.user,\r\n            })\r\n        if (res.refreshToken && res.accessToken) {\r\n            setCookie('accessToken', res.accessToken.split('Bearer ')[1], null);;\r\n            localStorage.setItem('refreshToken', res.refreshToken);\r\n        }})\r\n        .catch((error) => {\r\n            console.log('Error login message: ' + error)\r\n            dispatch({\r\n                type: GET_USER_DATA_ERROR,\r\n            })\r\n        })\r\n    };\r\n\r\n    export const getUserForgotPassword: AppThunk = (email: string) => (dispatch: AppDispatch) => {\r\n        dispatch({\r\n            type: GET_USER_DATA_REQUEST\r\n        });\r\n            fetch(`${URL}/password-reset`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email\r\n            })\r\n        })\r\n        .then((res) => {\r\n            if(!res.ok) {\r\n                return Promise.reject(res.status);\r\n            } \r\n            return res.json()\r\n        })\r\n        .then((res) =>{ \r\n            dispatch({\r\n                type: GET_USER_FORGOT_PASSWORD_SUCCESS, \r\n            })\r\n            return res.user;\r\n        })\r\n        .catch(error => {\r\n            console.log('Error forgot password message: ' + error)\r\n            dispatch({type: GET_USER_DATA_ERROR})}\r\n        )\r\n    };\r\n\r\nexport const getUserResetPassword: AppThunk = (password: string, token: string) => (dispatch: AppDispatch) => {\r\n    dispatch({\r\n        type: GET_USER_DATA_REQUEST\r\n    });\r\n        fetch(`${URL}/password-reset/reset`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            password,token\r\n        })\r\n    })\r\n    .then((res) => {\r\n        if(!res.ok) {\r\n            return Promise.reject(res);\r\n        } \r\n        return res.json()\r\n    })\r\n    .then((res) => dispatch({\r\n        type: GET_USER_RESET_PASSWORD_SUCCESS, \r\n        user: res.user,\r\n        })\r\n    )\r\n    .catch(error => {\r\n        console.log('Error user reset password message: ' + error)\r\n        dispatch({type: GET_USER_DATA_ERROR})}\r\n    )\r\n};\r\n\r\nexport const getUserInfo: AppThunk = () => (dispatch: AppDispatch) => {\r\n    if (!localStorage.getItem('refreshToken')) {\r\n        return\r\n    }\r\n    dispatch({\r\n        type: GET_USER_DATA_REQUEST\r\n    });\r\n    fetch(`${URL}/auth/user`, {\r\n        method: 'GET',\r\n        cache: 'no-cache',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + getCookie('accessToken')\r\n        },\r\n    })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n        if (!res.success) {\r\n            throw res;\r\n        } \r\n        dispatch({\r\n            type: GET_USER_INFO_SUCCESS, \r\n            user: res.user,\r\n        });\r\n    })\r\n    .catch(res => {\r\n        if (res.message === 'jwt expired') {\r\n                dispatch(getUserRefreshToken())\r\n        }\r\n        dispatch({\r\n            type: GET_USER_DATA_ERROR, \r\n        })\r\n        console.log('Error get user info: '+ res.message)\r\n    });\r\n};\r\n\r\nexport const getUserRefreshToken: AppThunk = () => (dispatch: AppDispatch) => {\r\n    dispatch({\r\n        type: GET_USER_DATA_REQUEST\r\n    })\r\n    fetch(`${URL}/auth/token`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            token: localStorage.getItem('refreshToken')\r\n        })\r\n    })\r\n    .then(res => {\r\n        if(!res.ok) {\r\n            return Promise.reject(res.status);\r\n        } \r\n        return res.json();\r\n    })\r\n    .then(res => {\r\n        dispatch({\r\n            type: GET_USER_REFRESH_TOKEN_SUCCESS,\r\n        })\r\n        localStorage.setItem('refreshToken', res.refreshToken);\r\n        setCookie('accessToken', res.accessToken.split('Bearer ')[1], null);\r\n        dispatch(getUserInfo())\r\n    })\r\n    .catch(error => {\r\n        dispatch({\r\n            type: GET_USER_DATA_ERROR, \r\n        });\r\n        console.log('Error refresh token message: ' + error)\r\n    });\r\n};\r\n\r\nexport const getUserInfoUpdate: AppThunk = (email: string, password: string, name: string) => (dispatch: AppDispatch) => {\r\n    dispatch({\r\n        type: GET_USER_DATA_REQUEST\r\n    });\r\n    fetch(`${URL}/auth/user`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + getCookie('accessToken'),\r\n        },\r\n        body: JSON.stringify({ email, password, name})\r\n    })\r\n    .then(res => {\r\n        if(!res.ok) {\r\n            return Promise.reject(res.status);\r\n        }\r\n        return res.json();\r\n    })\r\n    .then(res => {\r\n        dispatch({\r\n            type: GET_USER_INFO_UPDATE_SUCCESS,\r\n            user: res.user,\r\n        })\r\n    })\r\n    .catch(error => {\r\n        dispatch({\r\n            type: GET_USER_DATA_ERROR\r\n        })\r\n        console.log('Error user update info message: ' + error)\r\n    })\r\n};\r\n\r\nexport const getUserLogout: AppThunk = () => (dispatch: AppDispatch) => {\r\n    dispatch({\r\n        type: GET_USER_DATA_REQUEST\r\n    });\r\n    fetch(`${URL}/auth/logout`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            token: localStorage.getItem('refreshToken')\r\n        }),\r\n        redirect: 'follow',\r\n        referrerPolicy: 'no-referrer'\r\n    })\r\n    .then(res => {\r\n        if(!res.ok) {\r\n            return Promise.reject(res.status);\r\n        }\r\n        return res.json();\r\n    })\r\n    .then(res => {\r\n        dispatch({\r\n            type: GET_USER_LOGOUT_SUCCESS\r\n        });\r\n        localStorage.setItem('refreshToken', '');\r\n        deleteCookie('accessToken');\r\n    })\r\n    .catch(error => {\r\n        dispatch({\r\n            type: GET_USER_DATA_ERROR\r\n        });\r\n        console.log('Error user logout: ' + error)\r\n    })\r\n} ","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from '../../services/hooks';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport styles from './constructor-footer.module.css';\r\nimport { Modal } from '../modal/modal';\r\nimport OrderDetails from '../order-details/order-details';\r\nimport { Button, CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { getOrderNumber } from '../../services/actions/order';\r\nimport { resetConstructor } from '../../services/actions/constructor-action';\r\nimport { getUserInfo } from '../../services/actions/user';\r\n\r\nconst ConstructorFooter = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const { constructorIngredients, topBun, bottomBun } = useSelector(state => state.constructorStore);\r\n    const { isUserLoggedIn } = useSelector(state => state.userData);\r\n    const { orderId } = useSelector(state => state.order);\r\n    const [ detailsOpen, setDetailsOpen ] = useState(false);\r\n    \r\n    const totalSum =  (topBun?.price || 0) + (bottomBun?.price || 0) + constructorIngredients?.reduce((acc, item) => {return acc + item.price}, 0);\r\n        \r\n\r\n    const closeDetailsHandler = () => {\r\n        setDetailsOpen(false);\r\n    }\r\n\r\n    const allIngredients = [...constructorIngredients, topBun, bottomBun];\r\n\r\n    const orderDetailsHandler = () => {\r\n        if (!topBun) {\r\n            return;\r\n        }\r\n        if (!isUserLoggedIn) {\r\n            history.replace('/login');\r\n        } else {\r\n            dispatch(getUserInfo());\r\n            dispatch(getOrderNumber(allIngredients?.map(item=> item?._id)));\r\n            setDetailsOpen(true);\r\n            dispatch(resetConstructor());\r\n        }\r\n    };\r\n\r\n    return (\r\n        <footer className={styles.container}>\r\n            <div className={styles.price}>\r\n                <p className={`text text_type_digits-medium mr-2`} data-test-id='total-cost'>\r\n                    {totalSum || 0}\r\n                </p>\r\n                <CurrencyIcon type=\"primary\" />\r\n            </div>\r\n            <Button onClick = {orderDetailsHandler} type=\"primary\" size=\"large\">\r\n                Оформить заказ\r\n            </Button>\r\n            {detailsOpen && \r\n                <Modal  closeHandler={closeDetailsHandler}>\r\n                    <OrderDetails orderId={orderId}/>\r\n                </Modal>\r\n            }\r\n        </footer>\r\n    )\r\n};\r\n\r\nexport default ConstructorFooter;","import React from \"react\";\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\nimport { useDrop } from 'react-dnd';\r\nimport styles from \"./burger-constructor.module.css\";\r\n\r\nimport BurgerConstructorItem from '../burger-constructor-item/burger-constructor-item';\r\nimport ConstructorFooter from \"../constructor-footer/constructor-footer\";\r\nimport { ConstructorElement } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { addIngredientToConstructor } from '../../services/actions/constructor-action';\r\nimport { deleteIngredient } from \"../../services/actions/constructor-action\";\r\nimport { TIngredient } from \"../../services/types/data\";\r\n\r\nconst BurgerConstructor = () => {\r\n    const dispatch = useDispatch();\r\n    const { constructorIngredients, topBun, bottomBun } = useSelector(state => state.constructorStore);\r\n\r\n    const [, dropTarget] = useDrop({\r\n        accept: 'ingredient',\r\n        drop(item: TIngredient) {\r\n                dispatch(addIngredientToConstructor(item.type, item.name, item.image, item.price, item._id))\r\n            },\r\n    });\r\n\r\n    const deleteHandler = (id: string) => {\r\n        dispatch(deleteIngredient(id))\r\n    };\r\n\r\n    const mainIngredients = constructorIngredients.filter((item) => item.ingredientType !== 'bun');\r\n    return (\r\n        <section className={styles.container}>\r\n            <div className={styles.orders} ref={dropTarget} data-test-id='burger-constructor'>\r\n                <div className={`${styles.element} pl-8`}\r\n                    data-test-id='burger-constructor-bun'\r\n                >\r\n                    { topBun && <ConstructorElement\r\n                        type=\"top\"\r\n                        isLocked={true}\r\n                        text={topBun.name + ' (верх)'}\r\n                        price={topBun.price}\r\n                        thumbnail={topBun.image}\r\n                    />}\r\n                </div>\r\n                <div className={styles.mainIngredientsList}  data-test-id='burger-constructor-main'>\r\n                    {mainIngredients && mainIngredients.map ((item, index) => \r\n                        <BurgerConstructorItem\r\n                            key={item.uniqueId} \r\n                            uniqueId={item.uniqueId}\r\n                            _id={item._id}\r\n                            index={index}\r\n                            // type={item.type}\r\n                            price={item.price}\r\n                            name={item.name}\r\n                            image={item.image}\r\n                            deleteItem={deleteHandler}\r\n                        />\r\n                    )}\r\n                </div>\r\n                <div className={`${styles.element} pl-8`}\r\n                    data-test-id='burger-constructor-bun'\r\n                >\r\n                    {bottomBun && <ConstructorElement\r\n                        type=\"bottom\"\r\n                        isLocked={true}\r\n                        text={bottomBun.name + ' (низ)'}\r\n                        price={bottomBun.price}\r\n                        thumbnail={bottomBun.image}\r\n                    />}\r\n                </div>\r\n                <ConstructorFooter />\r\n            </div> \r\n        </section>\r\n    )\r\n};\r\n\r\nexport default BurgerConstructor;\r\n","import { \r\n    GET_INGREDIENTS_REQUEST,\r\n    GET_INGREDIENTS_SUCCESS,\r\n    GET_INGREDIENTS_ERROR,\r\n    SET_INGREDIENT_DETAILS\r\n} from '../constants';\r\nimport {URL} from '../../utils/constants';\r\nimport { AppDispatch, AppThunk } from '../store';\r\nimport { TIngredient } from '../types/data';\r\n\r\nexport interface IGetIngredientsRequestAction {\r\n    readonly type: typeof GET_INGREDIENTS_REQUEST\r\n}\r\n\r\nexport interface IGetIngredientsSuccessAction {\r\n    readonly type: typeof GET_INGREDIENTS_SUCCESS;\r\n    readonly ingredients: ReadonlyArray<TIngredient>\r\n}\r\n\r\nexport interface IGetIngredientsErrorAction {\r\n    readonly type: typeof GET_INGREDIENTS_ERROR\r\n}\r\n\r\nexport interface ISetIngredientDetailsAction {\r\n    readonly type: typeof SET_INGREDIENT_DETAILS;\r\n    readonly ingredient: TIngredient;\r\n}\r\n\r\nexport type TIngredientsActions = |\r\n    IGetIngredientsRequestAction |\r\n    IGetIngredientsSuccessAction |\r\n    IGetIngredientsErrorAction |\r\n    ISetIngredientDetailsAction|\r\n    any;\r\n\r\nexport const getIngredientsRequest = (): IGetIngredientsRequestAction => ({\r\n    type: GET_INGREDIENTS_REQUEST\r\n});\r\n\r\nexport const getIngredientsSuccess = (ingredients: ReadonlyArray<TIngredient>): IGetIngredientsSuccessAction => ({\r\n    type: GET_INGREDIENTS_SUCCESS,\r\n    ingredients\r\n});\r\n\r\nexport const getIngredientsError = (): IGetIngredientsErrorAction => ({\r\n    type: GET_INGREDIENTS_ERROR,\r\n})\r\n\r\nexport const getIngredients: AppThunk = () => (dispatch: AppDispatch) => {\r\n    dispatch(getIngredientsRequest());\r\n    fetch(`${URL}/ingredients`)\r\n        .then((res) => {\r\n            if(!res.ok) {\r\n                return Promise.reject(res.status);\r\n            }\r\n            return res.json()\r\n        })\r\n        .then((res) => dispatch(getIngredientsSuccess(res.data)))\r\n        .catch(err => dispatch(getIngredientsError()));\r\n};\r\n\r\nexport const setIngredientDetails = (ingredient: TIngredient): ISetIngredientDetailsAction => ({\r\n        type: SET_INGREDIENT_DETAILS,\r\n        ingredient\r\n})\r\n\r\n","import React, { FC } from \"react\";\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\n\r\nimport styles from \"./ingredient.module.css\";\r\nimport { Counter, CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { setIngredientDetails } from \"../../services/actions/ingredients\";\r\n// import { getIngredientDetails } from '../../services/actions/ingredients';\r\n\r\nimport { useDrag } from 'react-dnd';\r\nimport { TIngredient } from \"../../services/types/data\";\r\n\r\ninterface IIngredient {\r\n    ingredient: TIngredient\r\n}\r\n\r\nconst Ingredient: FC<IIngredient> = ({ ingredient }) => {\r\n    const location = useLocation();\r\n    const dispatch = useDispatch();\r\n\r\n    const { name, image, price, _id, type } = ingredient;\r\n    const { constructorIngredients, topBun } = useSelector(state => state.constructorStore);\r\n    \r\n    const [{isDragging}, dragRef] = useDrag({\r\n        type:'ingredient',\r\n        item: {type, name, image, price, _id}, \r\n        collect: monitor => ({\r\n            isDragging: monitor.isDragging(),\r\n        })\r\n    })\r\n    const opacity = isDragging ? 0.5 : 1;\r\n    const countIt = constructorIngredients.reduce((acc,item) => {\r\n        if (topBun && topBun._id === _id){\r\n            return 2;\r\n        } else\r\n            return item._id === _id ? acc+1 : acc\r\n    }, 0);\r\n\r\n    const onCardClickHandler = () => {\r\n        dispatch(setIngredientDetails(ingredient))\r\n    };\r\n\r\n    // const onCloseClickHandler = () => {\r\n    //     setIsOpenDetails(false);\r\n    // }\r\n\r\n    return (\r\n            <div ref={dragRef} className={styles.ingredientCard} onClick={onCardClickHandler} style={{opacity}} data-test-id='burger-ingredient'>\r\n                <Link  className={styles.link} \r\n                    to={{ \r\n                        pathname: `/ingredients/${_id}`, \r\n                        state: {background: location} \r\n                    }}\r\n                >\r\n                    <img className={styles.image} src={image} alt={name} /> \r\n                    <div className={styles.price}>\r\n                        <p className=\"text text_type_digits-default pr-2\"> {price} </p>\r\n                        <CurrencyIcon type=\"primary\" />\r\n                    </div>\r\n                    <div>\r\n                        <p className={`${styles.name} text text_type_main-default`}>\r\n                            {name}\r\n                        </p>\r\n                    </div>\r\n                    {countIt > 0 && <Counter count={countIt} size=\"default\" />}\r\n                </Link>\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Ingredient;","import React, { FC } from \"react\";\r\nimport styles from \"./ingredients-type.module.css\";\r\nimport Ingredient from \"../ingredient/ingredient\";\r\nimport { TIngredient } from \"../../services/types/data\";\r\n\r\ninterface IIngredientsOfType {\r\n    ingredients: TIngredient [],\r\n    typeName: string\r\n};\r\n\r\nconst IngredientsType: FC<IIngredientsOfType> = ({ingredients, typeName}) => {\r\n    return (\r\n        <div className={styles.container}>\r\n            <p className=\"text text_type_main-medium mb-6\">\r\n                {typeName}\r\n            </p>\r\n            <ul className={styles.list}>\r\n                {ingredients.map((item) => \r\n                    <li \r\n                        key={item._id}\r\n                        className={styles.ingredientItem}>\r\n                        <Ingredient \r\n                            ingredient={item}\r\n                        />\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default IngredientsType;","import React, { FC } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport tabsStyles from \"./tabs.module.css\";\r\nimport { Tab } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\ntype TIngredientType =\r\n  | 'bun'\r\n  | 'main'\r\n  | 'sauce';\r\n\r\ninterface ITab {\r\n    onTabClick?: (data: TIngredientType) => void,\r\n    current: string\r\n}\r\n\r\nconst Tabs: FC<ITab> = ({onTabClick, current}) => {\r\n    const tabClickHandler = (data: string) => {\r\n        onTabClick && onTabClick(data as TIngredientType)\r\n    }\r\n\r\n    return (\r\n        <ul className={tabsStyles.tabs}>\r\n            <li className={tabsStyles.item} >\r\n                <Tab \r\n                    value=\"bun\" \r\n                    active={current === \"bun\"} \r\n                    onClick={tabClickHandler}>\r\n                    Булки\r\n                </Tab>\r\n            </li>\r\n            <li className={tabsStyles.item}>\r\n                <Tab\r\n                    value=\"sauce\" \r\n                    active={current === \"sauce\"} \r\n                    onClick={tabClickHandler}>\r\n                    Соусы\r\n                </Tab>\r\n            </li>\r\n            <li className={tabsStyles.item}>\r\n                <Tab \r\n                    value=\"main\" \r\n                    active={current === \"main\"} \r\n                    onClick={tabClickHandler}>\r\n                    Начинки\r\n                </Tab>\r\n            </li>\r\n        </ul>\r\n    )\r\n};\r\n\r\nTabs.propTypes = {\r\n    onTabClick: PropTypes.func.isRequired,\r\n    current: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Tabs;","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useSelector, useDispatch } from '../../services/hooks';\r\n\r\nimport styles from './burger-ingredients.module.css';\r\nimport IngredientsType from '../ingredients-type/ingredients-type';\r\nimport Tabs from '../tabs/tabs';\r\nimport { getIngredients } from '../../services/actions/ingredients';\r\n\r\ntype TIngredientType =\r\n  | 'bun'\r\n  | 'main'\r\n  | 'sauce';\r\n\r\nconst BurgerIngredients = () => {\r\n    const [currentTab, setCurrentTab] = useState(\"bun\");\r\n    const dispatch = useDispatch();\r\n    const { ingredients } = useSelector(state => state.ingredients);\r\n    \r\n    useEffect(()=> {\r\n        dispatch(getIngredients());\r\n    }, [dispatch])\r\n\r\n    const bunRef = useRef<HTMLDivElement>(null);\r\n    const sauceRef = useRef<HTMLDivElement>(null);\r\n    const stuffingRef = useRef<HTMLDivElement>(null);\r\n    const refs = useRef<{ [K in TIngredientType]: React.RefObject<HTMLDivElement> }>({\r\n        'bun': bunRef,\r\n        'main': stuffingRef,\r\n        'sauce': sauceRef,\r\n    });\r\n    const scrollRef = useRef<HTMLDivElement>(null);\r\n\r\n    const filteredIngredients = (ingredientType: TIngredientType) => {\r\n        return ingredients.filter(item => item.type === ingredientType)\r\n    };\r\n\r\n    const handleScrollToType = (curRef: React.RefObject<HTMLDivElement>) => {\r\n        curRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n\r\n    const handleClick = (data: TIngredientType) => {\r\n        const currentRef = refs.current[data];\r\n        handleScrollToType(currentRef)\r\n        setCurrentTab(data)\r\n    };\r\n\r\n    const handleScroll = () => {\r\n        const scrollContainerPosition = scrollRef.current!.getBoundingClientRect().top;\r\n        const bunHeaderPosition = bunRef.current!.getBoundingClientRect().top;\r\n        const sauceHeaderPosition = sauceRef.current!.getBoundingClientRect().top;\r\n        const stuffingHeaderPosition = stuffingRef.current!.getBoundingClientRect().top;\r\n        const firstDiff = Math.abs(scrollContainerPosition - bunHeaderPosition);\r\n        const secondDiff = Math.abs(scrollContainerPosition - sauceHeaderPosition);\r\n        const thirdDiff = Math.abs(scrollContainerPosition - stuffingHeaderPosition);\r\n\r\n        if (firstDiff < secondDiff) {\r\n            setCurrentTab(\"bun\");\r\n        } else if (secondDiff < thirdDiff) {\r\n            setCurrentTab(\"sauce\");\r\n        } else setCurrentTab(\"main\");\r\n    }\r\n\r\n    return (\r\n            <section className={styles.section}>\r\n                <h1 className={`text text_type_main-large`}>\r\n                    Соберите бургер\r\n                </h1>\r\n                <Tabs onTabClick={handleClick} current={currentTab} />\r\n                <div ref={scrollRef}\r\n                    className={styles.ingredientList} \r\n                    onScroll={handleScroll}>\r\n                    <div className={styles.item}\r\n                        ref={bunRef}>\r\n                        <IngredientsType \r\n                            ingredients={filteredIngredients(\"bun\")} \r\n                            typeName={\"Булки\"} />\r\n                    </div>\r\n                    <div className={styles.item}\r\n                        ref={sauceRef}>\r\n                        <IngredientsType \r\n                            ingredients={filteredIngredients(\"sauce\")} \r\n                            typeName={\"Соусы\"} />\r\n                    </div>\r\n                    <div className={styles.item}\r\n                        ref={stuffingRef}>\r\n                        <IngredientsType \r\n                            ingredients={filteredIngredients(\"main\")} \r\n                            typeName={\"Начинки\"} />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n\r\nexport default BurgerIngredients;","import React from 'react';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\nimport { DndProvider } from 'react-dnd';\r\n\r\nimport styles from './../components/app/app.module.css';\r\nimport BurgerConstructor from '../components/burger-constructor/burger-constructor';\r\nimport BurgerIngredients from '../components/burger-ingredients/burger-ingredients';\r\n// import Header from './../components/app-header/app-header';\r\n\r\nexport const MainPage = () => {\r\n    return (\r\n        <div className={styles.app}>\r\n            {/* <Header /> */}\r\n            <main className={styles.container}>\r\n                <DndProvider backend={HTML5Backend}>\r\n                    <BurgerIngredients />\r\n                    <BurgerConstructor />\r\n                </DndProvider>\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useState, ChangeEvent, SyntheticEvent } from 'react';\r\nimport styles from './registration.module.css';\r\nimport { Link, Redirect, useLocation } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from '../services/hooks';\r\n\r\nimport { Button, PasswordInput, Input } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { getUserLogin } from '../services/actions/user';\r\n\r\ninterface ILocationState {\r\n    from: {\r\n        pathname: string\r\n    }\r\n}\r\n\r\nexport const LoginPage = () => {\r\n    const dispatch = useDispatch();\r\n    const { state } = useLocation<ILocationState>()\r\n\r\n    const { isUserLoggedIn } = useSelector(state => state.userData);\r\n    const [value, setValue] = useState({ email: '', password: '' });\r\n\r\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValue({ ...value, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const submitHandler = (e: SyntheticEvent<EventTarget>) => {\r\n        e.preventDefault();\r\n        const {email, password} = value;\r\n        dispatch(getUserLogin(email, password));\r\n    };\r\n\r\n    if (isUserLoggedIn) {\r\n        return <Redirect to={state?.from || '/'} />\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div className={styles.wrapper}>\r\n                <h2 className={`${styles.title} text text_type_main-medium`}>Вход</h2>\r\n                <form onSubmit={submitHandler}\r\n                    className={styles.form}\r\n                >\r\n                    <Input \r\n                        type='text'\r\n                        placeholder='E-mail'\r\n                        onChange={onChange}\r\n                        value={value.email}\r\n                        name='email'\r\n                        error={false}\r\n                        //onIconClick={onIconClick}\r\n                        errorText={'Ошибка'}\r\n                        size={'default'}\r\n                    />\r\n                    <div className={`${styles.container} mt-6`}>\r\n                        <PasswordInput \r\n                            onChange={onChange} \r\n                            value={value.password}\r\n                            name='password'\r\n                            size={'default'}\r\n                        />\r\n                    </div>\r\n                    <div className=\"mt-6 mb-20\">\r\n                        <Button type=\"primary\" size=\"medium\">\r\n                            Войти\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n                <div className={`${styles.additional} mb-20`}>\r\n                    <div className={styles.line}>\r\n                        <p className='text text_type_main-default text_color_inactive'>Вы — новый пользователь?&nbsp;</p>\r\n                        <Link className={`${styles.link} text text_type_main-default`}\r\n                                to='/register'>Зарегистрироваться\r\n                        </Link>\r\n                    </div>\r\n                    <div className={styles.line}>\r\n                        <p className='mt-4 text text_type_main-default text_color_inactive'>Забыли пароль?&nbsp;</p>\r\n                        <Link className={`${styles.link} text text_type_main-default`} \r\n                                to='/forgot-password'> Восстановить пароль\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useState, ChangeEvent, SyntheticEvent } from 'react';\r\nimport { Link, useHistory, Redirect, useLocation } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from '../services/hooks';\r\n\r\nimport styles from './registration.module.css';\r\nimport { getUserRegister } from '../services/actions/user';\r\nimport { Input, Button, PasswordInput } from '@ya.praktikum/react-developer-burger-ui-components'\r\n\r\ninterface ILocationState {\r\n    from: {\r\n        pathname: string\r\n    }\r\n}\r\n\r\nexport const RegistrationPage = () => {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { state } = useLocation<ILocationState>();\r\n\r\n    const { isUserLoggedIn } = useSelector(state => state.userData)\r\n    const [value, setValue] = useState({ name: '', email: '', password: '' });\r\n    \r\n    const onChange = (e:ChangeEvent<HTMLInputElement>) => {\r\n        setValue({ ...value, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const registerNewUser = (e: SyntheticEvent<EventTarget>) => {\r\n        e.preventDefault();\r\n        const {email, password, name} = value;\r\n        if (!email || !password || !name) {\r\n            alert('Введите свои данные')\r\n        }\r\n        dispatch(getUserRegister(email, password, name))\r\n        history.replace({pathname: '/login'})\r\n    };\r\n\r\n    if (isUserLoggedIn) {\r\n        return <Redirect to={state?.from || '/'} />\r\n    };\r\n\r\n    return(\r\n        <>\r\n            <div className={styles.wrapper}>\r\n                <h2 className={`${styles.title} text text_type_main-medium`}>Регистрация</h2>\r\n                <form  onSubmit={registerNewUser}\r\n                    className={styles.form}\r\n                >\r\n                    <Input \r\n                        type='text'\r\n                        placeholder='Имя'\r\n                        onChange={onChange}\r\n                        value={value.name}\r\n                        name='name'\r\n                        error={false}\r\n                        //onIconClick={onIconClick}\r\n                        errorText={'Ошибка'}\r\n                        size={'default'}\r\n                    />\r\n                    <div className={`${styles.container} mt-6`}>\r\n                        <Input \r\n                            onChange={onChange} \r\n                            type='text'\r\n                            placeholder='E-mail'\r\n                            value={value.email}\r\n                            name='email'\r\n                            error={false}\r\n                            // ref={inputRef}\r\n                            //onIconClick={onIconClick}\r\n                            errorText={'Ошибка'}\r\n                            size={'default'}\r\n                        />\r\n                    </div>\r\n                    <div className={`${styles.container} mt-6`}>\r\n                        <PasswordInput\r\n                            onChange={onChange} \r\n                            value={value.password}\r\n                            name='password'\r\n                            size={'default'}\r\n                        />\r\n                    </div>\r\n                    <div className=\"mt-6 mb-20\">\r\n                        <Button type=\"primary\" size=\"medium\">\r\n                            Зарегистрироваться\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n                <div className={`${styles.line}  mb-20`}>\r\n                    <p className='mt-4 text text_type_main-default text_color_inactive'>Уже зарегистрированы?&nbsp;</p>\r\n                    <Link className={`${styles.link} text text_type_main-default`} to='/login'>Войти</Link>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState, SyntheticEvent } from 'react';\r\nimport { Link, Redirect, useLocation, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from '../services/hooks';\r\n\r\nimport styles from './registration.module.css';\r\nimport { getUserForgotPassword } from '../services/actions/user';\r\nimport { Button, Input } from '@ya.praktikum/react-developer-burger-ui-components'\r\n\r\ninterface ILocationState {\r\n    from: {\r\n        pathname: string\r\n    }\r\n}\r\n\r\nexport const ForgotPasswordPage = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const { state } = useLocation<ILocationState>();\r\n    const { isUserLoggedIn, getUserEmail } = useSelector(state => state.userData)\r\n\r\n    const [email, setEmail] = useState('');\r\n    \r\n    const sendEmailHandler = (e: SyntheticEvent<EventTarget>) => {\r\n        e.preventDefault();\r\n        dispatch(getUserForgotPassword(email));    \r\n    }\r\n\r\n    useEffect(() => {\r\n        if (getUserEmail) {\r\n            history.replace('/reset-password');\r\n        }\r\n    }, [getUserEmail, history]);\r\n    \r\n    if (isUserLoggedIn) {\r\n        return <Redirect to={state?.from || '/'} />\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div className={styles.wrapper}>\r\n                <h2 className={`${styles.title} text text_type_main-medium`}>Восстановление пароля</h2>\r\n                <form className={styles.form} onSubmit={sendEmailHandler}>\r\n                    <div className={`${styles.container} mt-6`}>\r\n                        <Input \r\n                            type='text'\r\n                            placeholder='Укажите e-mail'\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            value={email}\r\n                            name='email'\r\n                            error={false}\r\n                            //onIconClick={onIconClick}\r\n                            errorText={'Ошибка'}\r\n                            size={'default'}\r\n                        />\r\n                    </div>\r\n                    <div className=\"mt-6 mb-20\">\r\n                        <Button \r\n                            type=\"primary\" \r\n                            size=\"medium\"\r\n                        >\r\n                            Восстановить\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n                <div className={styles.line}>\r\n                    <p className='text text_type_main-default text_color_inactive'>Вспомнили пароль?&nbsp;</p>\r\n                    <Link className={`${styles.link} text text_type_main-default`} to='/login'>Войти</Link>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { FC } from 'react';\r\nimport orderCardStyles from './order.module.css';\r\nimport { useSelector } from '../../services/hooks';\r\nimport { nanoid } from 'nanoid';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { getStatus, getDate } from '../../utils/utils';\r\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { TIngredient } from '../../services/types/data';\r\n\r\ninterface IOrder {\r\n    orderNumber: number,\r\n    name: string,\r\n    ingredientsId: string[],\r\n    createdAt: string,\r\n    status: \"done\" | \"pending\" | \"created\",\r\n}\r\n\r\nexport const Order: FC<IOrder> = ({orderNumber, name, ingredientsId, createdAt, status}) => {\r\n    const location = useLocation();\r\n    const { ingredients } = useSelector(state => state.ingredients);\r\n\r\n    const orderedIngredients: TIngredient[] = [];\r\n    let sum = 0;\r\n    \r\n    ingredientsId.forEach((id) => {\r\n        const foundIngredient = ingredients.find((item) => item._id === id);\r\n        sum = sum + foundIngredient!.price;\r\n        if (foundIngredient && !orderedIngredients.includes(foundIngredient)) {\r\n            orderedIngredients.push(foundIngredient)\r\n        }\r\n    });\r\n\r\n    const IngredientImg: FC<{ingredient: TIngredient; index: number, length: number}> = ({ingredient, index, length}) => {\r\n        return (\r\n            <li className={index !== 5 ? orderCardStyles.wrapper : orderCardStyles.last} style={{zIndex: 20-index}}>\r\n                <img className={orderCardStyles.icon} src={ingredient?.image_mobile} alt=''/>\r\n                    {index===5 && length>6 ? <span className={`${orderCardStyles.lastAmount} text text_type_main-default`}>+{length - 6}</span>: null}\r\n            </li> \r\n        )\r\n    }\r\n\r\n    const fontColor = status === 'done' ? '#00CCCC' : '#F2F2F3';\r\n\r\n    return ( \r\n        <section className={orderCardStyles.section}>\r\n            <div className={orderCardStyles.container}>\r\n                <div className={orderCardStyles.line}>\r\n                    <span className='text text_type_digits-default'>#{orderNumber}</span>\r\n                    <p className='text text_type_main-default text_color_inactive'>{getDate(createdAt)}</p>\r\n                </div>\r\n                <p className=\"text text_type_main-medium mb-6 mt-6\">{name}</p> \r\n                {location.pathname==='/profile/orders' ? <p className=\"text text_type_main-default pb-6\" style={{color: fontColor}}>{getStatus(status)}</p> : ''}\r\n                <div className={orderCardStyles.line}>\r\n                    <ul className={orderCardStyles.icons}>\r\n                        {orderedIngredients.map((item, index) => \r\n                            index < 6 &&\r\n                            <IngredientImg key={item._id} ingredient={item} index={index} length={orderedIngredients.length} />\r\n                            // index < 5 ?\r\n                            //     <li key={nanoid()} className={orderCardStyles.wrapper} style={{zIndex: 20-index}}>\r\n                            //         <img className={orderCardStyles.icon} src={item?.image_mobile} alt=''/>\r\n                            //     </li> \r\n                            // : index===5 && \r\n                            // <>\r\n                            //     { orderedIngredients.length > 6 \r\n                            //         ? \r\n                            //             <li key={nanoid()} className={orderCardStyles.last} style={{zIndex: 20-index}}>\r\n                            //                 <img className={orderCardStyles.icon} src={item?.image_mobile} alt=''/>\r\n                            //                 <span className={`${orderCardStyles.lastAmount} text text_type_main-default`}>+{orderedIngredients.length - 6}</span>\r\n                            //             </li> \r\n                            //         : \r\n                            //             <li key={nanoid()} className={orderCardStyles.wrapper} style={{zIndex: 20-index}}>\r\n                            //                 <img className={orderCardStyles.icon} src={item?.image_mobile} alt=''/>\r\n                            //             </li> \r\n                            //     }\r\n                            // </>\r\n                        )}\r\n                    </ul>\r\n                    <div className={orderCardStyles.price}>\r\n                        <p className=\"text text_type_digits-default mr-2\">{sum}</p>\r\n                        <CurrencyIcon type=\"primary\"/>\r\n                    </div>\r\n                </div>\r\n                {/* <p>{order.status}</p> */}\r\n            </div>\r\n        </section>\r\n    )\r\n}","import { \r\n    WS_CONNECTION_START,\r\n    WS_CONNECTION_START_PROFILE,\r\n    WS_CONNECTION_SUCCESS,\r\n    WS_CONNECTION_CLOSED,\r\n    WS_CONNECTION_ERROR, \r\n    WS_GET_ORDERS,\r\n} from '../constants';\r\nimport { TMessage } from '../types/data';\r\n\r\nexport interface IWsConnect {\r\n    readonly type: typeof WS_CONNECTION_START\r\n}\r\n\r\nexport interface IWsProfileConnect {\r\n    readonly type: typeof WS_CONNECTION_START_PROFILE,\r\n}\r\n\r\nexport interface IConnectionSuccess {\r\n    readonly type: typeof WS_CONNECTION_SUCCESS\r\n}\r\n\r\nexport interface  IConnectionError {\r\n    readonly type: typeof WS_CONNECTION_ERROR\r\n}\r\n\r\nexport interface IConnectionClosed {\r\n    readonly type: typeof WS_CONNECTION_CLOSED\r\n}\r\n\r\nexport interface IGetFeedOrders {\r\n    readonly type: typeof WS_GET_ORDERS;\r\n    readonly payload: TMessage\r\n}\r\n\r\nexport type TWebsocketsActions = \r\n    | IConnectionSuccess \r\n    | IConnectionError \r\n    | IConnectionClosed \r\n    | IGetFeedOrders\r\n    | IWsConnect\r\n    | IWsProfileConnect\r\n    | any;\r\n\r\nexport const wsConnect = (): IWsConnect => {\r\n    return {\r\n        type: WS_CONNECTION_START\r\n    }\r\n}\r\n\r\nexport const wsProfileConnect = (): IWsProfileConnect => {\r\n    return {\r\n        type: WS_CONNECTION_START_PROFILE,\r\n    }\r\n}\r\n\r\nexport const getFeedOrders = (message: TMessage): IGetFeedOrders => {\r\n    return {\r\n        type: WS_GET_ORDERS,\r\n        payload: message\r\n    }\r\n};\r\n\r\nexport const wsConnectionSuccess = (): IConnectionSuccess => {\r\n    return {\r\n        type: WS_CONNECTION_SUCCESS\r\n    };\r\n};\r\n\r\nexport const wsConnectionError = (): IConnectionError => {\r\n    return {\r\n    type: WS_CONNECTION_ERROR\r\n    };\r\n};\r\n\r\nexport const wsConnectionClosed = (): IConnectionClosed => {\r\n    return {\r\n    type: WS_CONNECTION_CLOSED\r\n    };\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\nimport { useLocation, Link } from 'react-router-dom';\r\nimport styles from './orders-history.module.css';\r\n\r\nimport { Order } from '../../components/order/order';\r\nimport {\r\n    wsProfileConnect,\r\n    wsConnectionClosed\r\n} from '../../services/actions/websockets'; \r\nimport { getUserInfo } from '../../services/actions/user';\r\nimport { TOrder } from '../../services/types/data';\r\nimport { getCookie } from '../../utils/utils';\r\n\r\nconst token = getCookie('accessToken')\r\n\r\nexport const OrdersHistoryPage = () => {\r\n    let location = useLocation();\r\n    const {  feedOrders } = useSelector(state => state.wsStore);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(\r\n        () => {\r\n        dispatch(getUserInfo());\r\n        dispatch(wsProfileConnect());\r\n        console.log('tok ' + token)\r\n        return () => {\r\n            dispatch(wsConnectionClosed())\r\n        }\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <ul className={styles.list}>\r\n                {feedOrders?.map((item: TOrder) => \r\n                <Link\r\n                    key={item._id}\r\n                    className={styles.link}\r\n                    to={{\r\n                    pathname: `/profile/orders/${item.number}`,\r\n                    state: { background: location },\r\n                    }}>\r\n                    <li\r\n                        className={styles.orderItem}>\r\n                        <Order \r\n                            orderNumber={item.number}\r\n                            name={item.name}\r\n                            ingredientsId={item.ingredients}\r\n                            status={item.status}\r\n                            createdAt={item.createdAt}\r\n                            // order={item}\r\n                        />\r\n                    </li>\r\n                </Link>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from 'react';\r\nimport styles from './order-page.module.css';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nimport { getStatus, getDate } from '../../utils/utils';\r\nimport { getOrderCardDetails } from '../../services/actions/order';\r\nimport { TIngredient } from '../../services/types/data';\r\n\r\nexport const OrderPage = () => {\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams<{ id?: string }>();\r\n    const { ingredients, ingredientsRequest, ingredientsError } = useSelector(state => state.ingredients);\r\n    const { orderCardDetails } = useSelector(state => state.order )\r\n\r\n    useEffect(() => {\r\n        dispatch(getOrderCardDetails(id))\r\n    },[dispatch])\r\n\r\n    let orderedIngredients: TIngredient[] = [];\r\n    let sum = 0;\r\n\r\n    orderCardDetails.ingredients?.forEach((ingredient: string) => {\r\n        const foundIngredient = ingredients.find((item) => item._id === ingredient);\r\n        sum = sum + foundIngredient!.price\r\n        if (foundIngredient && !orderedIngredients.includes(foundIngredient)) {\r\n            orderedIngredients.push(foundIngredient)\r\n        }\r\n    });\r\n\r\n    const getQuantity = (ingredient: string) => {\r\n        return orderCardDetails.ingredients.filter((item: string) => item === ingredient).length\r\n    };\r\n\r\n    const orderDate = () => {\r\n        return orderCardDetails.createdAt ? getDate(orderCardDetails.createdAt) : null\r\n    };\r\n\r\n    const fontColor = orderCardDetails?.status === 'done' ? '#00CCCC' : '#F2F2F3';\r\n\r\n    return( \r\n        orderCardDetails && ingredients.length !==0 && !ingredientsRequest &&\r\n        <section className={styles.section}>\r\n            <div className={styles.header}>\r\n                <span className=\"text text_type_digits-default mb-10\">#{orderCardDetails.number}</span>\r\n            </div>\r\n            <h2 className=\"text text_type_main-medium\">{orderCardDetails.name}</h2>\r\n            <span className={`${styles.status} text text_type_main-default`} style={{color: fontColor}}>{getStatus(orderCardDetails.status)}</span>\r\n            <p className=\"text text_type_main-medium\">Состав:</p>\r\n            <ul className={styles.ingredientsList}>\r\n                {orderedIngredients.map((ingredient: TIngredient) => \r\n                    <li key={ingredient._id} className={styles.item}>\r\n                        <div className={styles.right}>\r\n                            <img className={styles.icon} src={ingredient.image_mobile} alt={ingredient.name} />\r\n                            <p className=\"text text_type_main-default\">{ingredient.name}</p>\r\n                        </div>\r\n                        <div className={styles.left}>\r\n                            <span className='text_type_digits-default mr-2'>{getQuantity(ingredient._id)} x {ingredient.price}</span>\r\n                            <CurrencyIcon type=\"primary\"/>\r\n                        </div>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n            <div className={styles.line}>\r\n                <p className='text text_type_main-default text_color_inactive'>{orderDate}</p>\r\n                <div className={styles.left}>\r\n                    <span className='text_type_digits-default mr-2'>{sum}</span>\r\n                    <CurrencyIcon type=\"primary\"/>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n};","import React, { useState, SyntheticEvent } from 'react';\r\nimport { NavLink, Switch, Route, useLocation } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\nimport styles from './profile.module.css';\r\n\r\nimport { getUserLogout, getUserInfoUpdate } from '../../services/actions/user';\r\nimport { Button, Input } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { OrdersHistoryPage } from '../orders-history/orders-history';\r\nimport { OrderPage } from '../order-page/order-page';\r\n\r\nexport const ProfilePage = () => {\r\n    const location = useLocation();\r\n    const { user } = useSelector(state => state.userData)\r\n    const dispatch = useDispatch();\r\n\r\n    const [ userName, setUserName ] = useState(user!.name);\r\n    const [ userEmail, setUserEmail ] = useState(user!.email);\r\n    const [ userPassword, setUserPassword ] = useState('');\r\n    const [ disabledInput, setInputDisabled ] = useState(true);\r\n    const [ showButtons, setShowButtons ] = useState(false);\r\n\r\n    const onIconClick = () => {\r\n        setInputDisabled(false);\r\n    };\r\n\r\n    const logoutUser = () => {\r\n        dispatch(getUserLogout());\r\n    };\r\n\r\n    const editDataHandler = (e: SyntheticEvent<EventTarget>) => {\r\n        e.preventDefault();\r\n        dispatch(getUserInfoUpdate(userEmail, userPassword, userName));\r\n        setShowButtons(false);\r\n        setInputDisabled(true);\r\n    };\r\n\r\n    const rejectEditDataHandler = () => {\r\n        setUserName(user!.name);\r\n        setUserEmail(user!.email);\r\n        setUserPassword('');\r\n        setShowButtons(false);\r\n        setInputDisabled(true);\r\n    };\r\n\r\n    return(\r\n            <>\r\n                <main className={styles.container}>\r\n                    <div className={styles.wrapper} \r\n                        style={{width: location.pathname==='/profile/orders' ? '100%' : '65%'}}\r\n                    >\r\n                        <div className={styles.left}>\r\n                            <NavLink  to='/profile' exact={true}\r\n                                    activeStyle={{\r\n                                        color: \"#F2F2F3\"\r\n                                    }}\r\n                                    className={`${styles.link} text text_type_main-medium pb-4 pt-4 text_color_inactive`}>\r\n                                        Профиль\r\n                            </NavLink>\r\n                            <NavLink to='/profile/orders' exact={true}\r\n                                    activeStyle={{\r\n                                        color: \"#F2F2F3\"\r\n                                    }}\r\n                                    className={`${styles.link} text text_type_main-medium pb-4 pt-4 text_color_inactive`}>\r\n                                        История заказов\r\n                            </NavLink>\r\n                            <NavLink to='/login' onClick={logoutUser}\r\n                                    className={`${styles.link} text text_type_main-medium pb-4 pt-4 text_color_inactive`}>\r\n                                        Выход\r\n                            </NavLink>\r\n                            <div className={styles.text}>\r\n                                <p className='mt-20 text text_type_main-default text_color_inactive'>\r\n                                    В этом разделе вы можете изменить свои персональные данные\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <Switch>\r\n                        <Route path='/profile' exact={true}>\r\n                            <div className={styles.right}>\r\n                                <form onSubmit={editDataHandler}\r\n                                    className={styles.form}\r\n                                >\r\n                                    <Input \r\n                                        disabled={disabledInput ? true : false}\r\n                                        icon={'EditIcon'}\r\n                                        type='text'\r\n                                        placeholder='Имя'\r\n                                        onChange={(e) => {\r\n                                            setUserName(e.target.value);\r\n                                            setShowButtons(true);\r\n                                        }}\r\n                                        value={userName}\r\n                                        name='name'\r\n                                        error={false}\r\n                                        onIconClick={onIconClick}\r\n                                        errorText={'Ошибка'}\r\n                                        size={'default'}\r\n                                    />\r\n                                    <div className={`mt-6`}>\r\n                                        <Input \r\n                                            disabled={disabledInput ? true : false}\r\n                                            type='text'\r\n                                            icon={'EditIcon'}\r\n                                            placeholder='Логин'\r\n                                            onChange={(e) => {\r\n                                                setUserEmail(e.target.value);\r\n                                                setShowButtons(true);\r\n                                            }}\r\n                                            value={userEmail}\r\n                                            name='email'\r\n                                            error={false}\r\n                                            onIconClick={onIconClick}\r\n                                            errorText={'Ошибка'}\r\n                                            size={'default'}\r\n                                        />\r\n                                    </div>\r\n                                    <div className={`mt-6`}>\r\n                                        <Input \r\n                                            disabled={disabledInput ? true : false}\r\n                                            onChange={(e) => {\r\n                                                setUserPassword(e.target.value);\r\n                                                setShowButtons(true);\r\n                                            }} \r\n                                            type='text'\r\n                                            placeholder='Пароль'\r\n                                            icon={'EditIcon'}\r\n                                            value={userPassword}\r\n                                            name='password'\r\n                                            error={false}\r\n                                            // ref={inputRef}\r\n                                            onIconClick={onIconClick}\r\n                                            errorText={'Ошибка'}\r\n                                            size={'default'}\r\n                                        />\r\n                                    </div>\r\n                                    { showButtons && \r\n                                        <div className={styles.buttons}>\r\n                                            <span onClick={rejectEditDataHandler}\r\n                                                className={`${styles.reject} text text_type_main-default mr-6`}>\r\n                                                    Отмена\r\n                                            </span>\r\n                                            <Button  type=\"primary\" size=\"medium\">\r\n                                                Сохранить\r\n                                            </Button>\r\n                                        </div>\r\n                                    }\r\n                                </form>\r\n                            </div>\r\n                        </Route>\r\n                        <Route path='/profile/orders' exact={true}>\r\n                            <OrdersHistoryPage />\r\n                        </Route>\r\n                        <Route path='/profile/orders/:id'>\r\n                            <OrderPage />\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </main>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState, ChangeEvent, SyntheticEvent } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from '../services/hooks';\r\n\r\nimport styles from './registration.module.css';\r\nimport { getUserResetPassword } from '../services/actions/user';\r\nimport { Button, PasswordInput, Input } from '@ya.praktikum/react-developer-burger-ui-components'\r\n\r\nexport const ResetPasswordPage = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const { isUserLoggedIn, getUserEmail, isResetPassword } = useSelector(state => state.userData)\r\n\r\n    const [value, setValue] = useState({ password: '', token: ''});\r\n\r\n    const onChange = (e:ChangeEvent<HTMLInputElement>) => {\r\n        setValue({ ...value, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    const passwordResetHandler = (e: SyntheticEvent<EventTarget>) => {\r\n        e.preventDefault();\r\n        dispatch(getUserResetPassword(value.password, value.token))\r\n    }\r\n\r\n    useEffect(() => { \r\n        if(isResetPassword) {\r\n            history.replace('/login');\r\n        }\r\n    }, [isResetPassword, history])\r\n\r\n    if(isUserLoggedIn || !getUserEmail) {\r\n        history.replace('/');\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div className={styles.wrapper}>\r\n                <h2 className={`${styles.title} text text_type_main-medium`}>Восстановление пароля</h2>\r\n                <form   onSubmit={passwordResetHandler}\r\n                        className={styles.form}>\r\n                    <div className={`${styles.container} mt-6`}>\r\n                        <PasswordInput\r\n                            onChange={onChange}\r\n                            value={value.password}\r\n                            name='password'\r\n                            size={'default'}\r\n                        />\r\n                        <div className={`${styles.container} mt-6`}>\r\n                            <Input \r\n                                type='text'\r\n                                placeholder='Введите код из письма'\r\n                                onChange={onChange}\r\n                                value={value.token}\r\n                                name='token'\r\n                                error={false}\r\n                                //onIconClick={onIconClick}\r\n                                errorText={'Ошибка'}\r\n                                size={'default'}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mt-6 mb-20\">\r\n                        <Button type=\"primary\" size=\"medium\">\r\n                            Восстановить\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n                <div className={styles.line}>\r\n                    <p className='text text_type_main-default text_color_inactive'>Вспомнили пароль?&nbsp;</p>\r\n                    <Link className={`${styles.link} text text_type_main-default`} to='/login'>Войти</Link>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from '../../services/hooks';\r\nimport { getUserInfo } from '../../services/actions/user';\r\nimport { useEffect, FC } from 'react';\r\n\r\ninterface IProtectedRoute {\r\n    path: string | undefined\r\n  }\r\n\r\nexport const ProtectedRoute: FC<IProtectedRoute> = ({ children, ...rest }) => {\r\n    const dispatch = useDispatch();\r\n    const { isUserLoggedIn } = useSelector(state => state.userData);\r\n\r\n    const init = async () => {\r\n        await dispatch(getUserInfo());\r\n    }\r\n\r\n    useEffect(() => {\r\n        init();\r\n    },[])\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n                isUserLoggedIn ? (\r\n                children\r\n                ) : ( <Redirect to={{pathname: '/login', state: { from: location },}}/> )\r\n            }\r\n        />\r\n    );\r\n} ","import React from 'react';\r\nimport styles from './orders-queue.module.css';\r\nimport { useSelector } from '../../services/hooks';\r\n\r\ninterface IItem {\r\n    ingredients: string[],\r\n    name: string,\r\n    _id: string,\r\n    status: 'done' | 'pending' | 'created';\r\n    number: number,\r\n    createdAt: string,\r\n    updatedAt: string\r\n}\r\n\r\nexport const OrdersQueue = () => {\r\n    const { feedOrders, total, totalToday } = useSelector(state => state.wsStore)\r\n    const doneOrders: IItem[] = feedOrders?.filter(item => item.status===\"done\")\r\n    const pendingOrders: IItem[] = feedOrders?.filter(item => item.status===\"pending\")\r\n    \r\n    return (\r\n        <section className={styles.container}>\r\n            <div className={styles.statusColumns}>\r\n                <div className={styles.column}>\r\n                    <p className=\"text text_type_main-medium\">\r\n                        Готовы:\r\n                    </p>\r\n                    <ul className={styles.numbers} style={{color: '#00CCCC'}}>\r\n                        <div className={styles.numbersColumn}>\r\n                            {doneOrders &&  doneOrders.slice(0,5).map((item) => \r\n                                    <li className=\"text text_type_digits-default\" key={item._id} >{item.number}</li>\r\n                            )}\r\n                        </div>\r\n                        <div className={styles.numbersColumn}>\r\n                            {doneOrders.length > 5 && \r\n                                doneOrders?.slice(5,10).map((item) => \r\n                                    <li className=\"text text_type_digits-default\" key={item._id} >{item.number}</li>\r\n                            )}\r\n                        </div>\r\n                    </ul>\r\n                </div>\r\n                <div className={styles.column}>\r\n                    <p className=\"text text_type_main-medium\">\r\n                        В работе:\r\n                    </p>\r\n                    <ul className={styles.numbers}>\r\n                        {pendingOrders?.slice(0,5).map((item) => \r\n                            <li className=\"text text_type_digits-default\" key={item._id} >{item.number}</li>\r\n                        )} \r\n                        {pendingOrders.length > 5 && \r\n                            pendingOrders?.slice(5,10).map((item) => \r\n                                <li className=\"text text_type_digits-default\" key={item._id} >{item.number}</li>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div className={styles.block}>\r\n                <p className=\"text text_type_main-medium\">\r\n                    Выполнено за все время:\r\n                </p>\r\n                <p className={`${styles.total} text text_type_digits-large`}>\r\n                        {total}\r\n                </p>\r\n            </div>\r\n            <div className={styles.block}>\r\n                <p className='text text_type_main-medium'>\r\n                    Выполнено за сегодня:\r\n                </p>\r\n                <p className={`${styles.total} text text_type_digits-large`}>\r\n                    {totalToday}\r\n                </p>\r\n            </div>\r\n        </section>\r\n    )\r\n};","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\nimport styles from './feed.module.css';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nimport { Order } from '../../components/order/order';\r\nimport { OrdersQueue } from '../../components/orders-queue/orders-queue';\r\nimport {\r\n    wsConnect,\r\n    wsConnectionClosed\r\n} from '../../services/actions/websockets'; \r\n\r\nexport const FeedPage = () => {\r\n    const location = useLocation();\r\n    const { feedOrders } = useSelector(state => state.wsStore)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(\r\n        () => {\r\n            dispatch(wsConnect());\r\n            return (): void => {\r\n                dispatch(wsConnectionClosed())\r\n            }\r\n        }, [dispatch]\r\n    );\r\n\r\n    return ( \r\n        <div className={styles.container}>\r\n            <h2 className=\"text text_type_main-large mb-5\">Лента заказов</h2>\r\n            <div className={styles.wrapper}>\r\n                <div className={styles.section}>\r\n                    <ul className={styles.list}>\r\n                    {feedOrders?.map((item) => \r\n                        <Link \r\n                        className={styles.link}\r\n                        key={item._id}\r\n                        to= {{ \r\n                            pathname: `/feed/${item.number}`, \r\n                            state: {background: location} \r\n                        }}>\r\n                            <li \r\n                                className={styles.orderItem}>\r\n                                <Order \r\n                                    orderNumber={item.number}\r\n                                    name={item.name} \r\n                                    ingredientsId={item.ingredients} \r\n                                    createdAt={item.createdAt} \r\n                                    status={item.status}\r\n                                />\r\n                            </li>\r\n                        </Link>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n                <div className={styles.section}>\r\n                    <OrdersQueue />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './not-found-page.module.css';\r\n\r\nexport const NotFound404 = () => {\r\n    return (\r\n        <div className={styles.container}>\r\n            <p className='text text_type_main-medium'>\r\n                Такой страницы не существует. Вы можете вернуться на&nbsp;\r\n                <Link className={styles.link} to='/'>главную</Link>.\r\n            </p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useSelector } from '../../services/hooks';\r\nimport styles from './ingredient-details.module.css';\r\n\r\nconst IngredientDetails = () => {\r\n    const { ingredientDetails } = useSelector(state => state.ingredients)\r\n    \r\n    const EnergyValues = () => {\r\n        return (\r\n            <div className={styles.values}>\r\n                <div className={styles.valueItem}>\r\n                    <p className=\"text text_type_main-default text_color_inactive\">\r\n                        Калории, ккал\r\n                    </p>\r\n                    <span className=\"text text_type_digits-default text_color_inactive\">\r\n                        {ingredientDetails!.calories}\r\n                    </span>\r\n                </div>\r\n                <div className={styles.valueItem}>\r\n                    <p className=\"text text_type_main-default text_color_inactive\">Белки, г</p>\r\n                        <span className=\"text text_type_digits-default text_color_inactive\">\r\n                            {ingredientDetails!.proteins}\r\n                        </span>\r\n                </div>\r\n                <div className={styles.valueItem}>\r\n                    <p className=\"text text_type_main-default text_color_inactive\">\r\n                        Жиры, г\r\n                    </p>\r\n                    <span className=\"text text_type_digits-default text_color_inactive\">\r\n                        {ingredientDetails!.fat}\r\n                    </span>\r\n                </div>\r\n                <div className={styles.valueItem}>\r\n                    <p className=\"text text_type_main-default text_color_inactive\">\r\n                        Углеводы, г\r\n                    </p>\r\n                    <span className=\"text text_type_digits-default text_color_inactive\">\r\n                        {ingredientDetails!.carbohydrates}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <div className={styles.container}>\r\n            <img  className={`${styles.image} mb-4`} \r\n                src={ingredientDetails!.image} \r\n                alt={ingredientDetails!.name}/>\r\n            <h3 className=\"text text_type_main-medium mb-4\">{ingredientDetails!.name}</h3>\r\n            <EnergyValues />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default IngredientDetails;","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from '../services/hooks';\r\nimport { setIngredientDetails } from '../services/actions/ingredients'\r\nimport { useParams } from 'react-router-dom'\r\nimport IngredientDetails from '../components/ingredient-details/ingredient-details'\r\n\r\nexport const IngredientPage = () => {\r\n    const dispatch = useDispatch();\r\n    const id = useParams<{ id: string }>().id;\r\n    const { ingredients, ingredientDetails } = useSelector(state => state.ingredients)\r\n\r\n    let currentIngredient = ingredients.find((item) => item._id === id);\r\n\r\n    useEffect(() => {\r\n        dispatch(setIngredientDetails(currentIngredient!));\r\n    }, [dispatch, currentIngredient])\r\n\r\n    return (\r\n            <>\r\n                {ingredientDetails ? \r\n                (\r\n                    <>\r\n                    <h2 className=\"text text_type_main-large mt-20\">Детали Ингредиента</h2>\r\n                    <IngredientDetails />\r\n                    </>    \r\n                ) : \r\n                <p className=\"text text_type_main-medium text_color_inactive\">У нас сейчас нет такого ингредиента.</p>}\r\n            </>)\r\n}","import React from 'react';\r\nimport styles from './order-info.module.css';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector } from '../../services/hooks';\r\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nimport { getStatus, getDate } from '../../utils/utils';\r\nimport { TIngredient, TOrder } from '../../services/types/data';\r\n\r\nexport const OrderInfo = () => {\r\n    const { id } = useParams<{ id?: string }>();\r\n    const orders = useSelector(state => state.wsStore.feedOrders); \r\n    const { ingredients, ingredientsRequest, ingredientsError } = useSelector(state => state.ingredients);\r\n    let order = orders.find((item: TOrder) => item.number === Number(id));\r\n    let orderedIngredients: TIngredient[] = [];\r\n    let sum = 0;\r\n\r\n    order?.ingredients.forEach((ingredient) => {\r\n        const foundIngredient = ingredients.find((item) => item._id === ingredient);\r\n        sum = sum + foundIngredient!.price\r\n        if (foundIngredient && !orderedIngredients.includes(foundIngredient)) {\r\n            orderedIngredients.push(foundIngredient)\r\n        }\r\n    });\r\n\r\n    const getQuantity = (ingredient: string) => {\r\n        return order?.ingredients.filter(item => item === ingredient).length\r\n    }\r\n\r\n    const fontColor = order?.status === 'done' ? '#00CCCC' : '#F2F2F3';\r\n\r\n    return( \r\n        (ingredients.length > 0 && !ingredientsRequest && !ingredientsError && order) ?\r\n        <section className={styles.section}>\r\n            <div className={styles.header}>\r\n                <span className=\"text text_type_digits-default mb-10\">#{order.number}</span>\r\n            </div>\r\n            <h2 className=\"text text_type_main-medium\">{order.name}</h2>\r\n            <span className={`${styles.status} text text_type_main-default`} style={{color: fontColor}}>{getStatus(order.status)}</span>\r\n            <p className=\"text text_type_main-medium\">Состав:</p>\r\n            <ul className={styles.ingredientsList}>\r\n                {orderedIngredients.map((ingredient: TIngredient) => \r\n                    <li key={ingredient._id} className={styles.item}>\r\n                        <div className={styles.right}>\r\n                            <img className={styles.icon} src={ingredient.image_mobile} alt={ingredient.name} />\r\n                            <p className=\"text text_type_main-default\">{ingredient.name}</p>\r\n                        </div>\r\n                        <div className={styles.left}>\r\n                            <span className='text_type_digits-default mr-2'>{getQuantity(ingredient._id)} x {ingredient.price}</span>\r\n                            <CurrencyIcon type=\"primary\"/>\r\n                        </div>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n            <div className={styles.line}>\r\n                <p className='text text_type_main-default text_color_inactive'>{getDate(order.createdAt)}</p>\r\n                <div className={styles.left}>\r\n                    <span className='text_type_digits-default mr-2'>{sum}</span>\r\n                    <CurrencyIcon type=\"primary\"/>\r\n                </div>\r\n            </div>\r\n        </section>\r\n        : null\r\n    )\r\n};","import React, { useEffect } from 'react';\r\n\r\nimport { Route, Switch, useLocation, useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\n\r\nimport { Header } from '../app-header/app-header';\r\nimport { Modal } from '../modal/modal';\r\nimport { MainPage } from '../../pages/main-page';\r\nimport { LoginPage } from '../../pages/login';\r\nimport { RegistrationPage } from '../../pages/registration';\r\nimport { ForgotPasswordPage } from '../../pages/forgot-password';\r\nimport { ProfilePage } from '../../pages/profile/profile';\r\nimport { ResetPasswordPage } from \"../../pages/reset-password\";\r\nimport { ProtectedRoute } from '../protected-route/protected-route';\r\nimport { getUserInfo } from '../../services/actions/user';\r\nimport { FeedPage } from '../../pages/feed/feed';\r\nimport { NotFound404 } from '../../pages/404page';\r\nimport { IngredientPage } from '../../pages/ingredient-page';\r\nimport IngredientDetails from '../ingredient-details/ingredient-details';\r\nimport { OrderInfo } from '../order-info/order-info';\r\nimport { getIngredients } from '../../services/actions/ingredients';\r\nimport { OrderPage } from '../../pages/order-page/order-page';\r\n\r\nconst App =() => {\r\n  interface IBackgroundLocation {\r\n    background: {\r\n      pathname: string\r\n      search: string\r\n      hash: string\r\n      state: undefined\r\n      key: string\r\n    }\r\n  }\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const location = useLocation<IBackgroundLocation | undefined>();\r\n  const { isUserLoggedIn } = useSelector(state => state.userData);\r\n  const { ingredients } = useSelector(state => state.ingredients);\r\n  \r\n  const background = history.action === 'PUSH' && location.state && location.state.background;\r\n        \r\n  useEffect(() => {\r\n    if (!isUserLoggedIn) {\r\n      dispatch(getUserInfo())\r\n    }\r\n  },[isUserLoggedIn, dispatch])\r\n\r\n  useEffect (() => {\r\n    if(ingredients.length===0){\r\n      dispatch(getIngredients());\r\n    }\r\n  }, [dispatch, ingredients.length])\r\n\r\n  const closeModalHandler = () => {\r\n    // e.preventDefault();\r\n    history.goBack();\r\n  }\r\n  \r\n  const ingredientHeader = 'Детали ингредиента';\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n        <Switch location={background || location}>\r\n          <Route path='/' exact={true}>\r\n            <MainPage />\r\n          </Route>\r\n          <Route path='/login'>\r\n            <LoginPage />\r\n          </Route>\r\n          <Route path='/register' exact={true}>\r\n            <RegistrationPage />\r\n          </Route>\r\n          <Route path='/forgot-password' exact={true}>\r\n            <ForgotPasswordPage />\r\n          </Route>\r\n          <Route path='/reset-password' exact={true}>\r\n            <ResetPasswordPage />\r\n          </Route>\r\n          <ProtectedRoute path='/profile'>\r\n            <ProfilePage />\r\n          </ProtectedRoute>\r\n          <Route path='/feed/:id'>\r\n            <OrderPage />\r\n          </Route>\r\n          <Route path='/feed' >\r\n            <FeedPage />\r\n          </Route>\r\n          <Route path='/ingredients/:id'>\r\n            <IngredientPage />\r\n          </Route>\r\n          <Route>\r\n            <NotFound404 />\r\n          </Route>\r\n        </Switch>\r\n\r\n          {background && (\r\n            <Switch>\r\n              <Route path='/ingredients/:id' >\r\n                <Modal header={ingredientHeader} closeHandler={closeModalHandler}>\r\n                  <IngredientDetails />\r\n                </Modal>\r\n              </Route>\r\n              <Route path='/feed/:id'>\r\n                <Modal closeHandler={closeModalHandler}>\r\n                  <OrderInfo/>\r\n                </Modal>\r\n              </Route>\r\n              <Route path='/profile/orders/:id'>\r\n                <Modal closeHandler={closeModalHandler}>\r\n                  <OrderInfo/>\r\n                </Modal>\r\n              </Route>\r\n            </Switch>\r\n          )}\r\n      </>\r\n  );\r\n};\r\n\r\nexport default App;","import { nanoid } from 'nanoid';\r\nimport { TConstructorActions } from '../actions/constructor-action';\r\nimport {\r\n    ADD_INGREDIENT_TO_CONSTRUCTOR,\r\n    DELETE_FROM_CONSTRUCTOR,\r\n    CHANGE_INGREDIENTS_ORDER,\r\n    RESET_CONSTRUCTOR\r\n} from '../constants';\r\n\r\nexport type TConstructorIngredient = {\r\n    readonly _id: string;\r\n    ingredientType: string;\r\n    readonly name: string;\r\n    readonly price: number;\r\n    readonly image: string;\r\n    readonly uniqueId: string;\r\n}\r\n\r\nexport type TConstructorIngredientsState = {\r\n    constructorIngredients: TConstructorIngredient[],\r\n    topBun: TConstructorIngredient | null,\r\n    bottomBun: TConstructorIngredient | null\r\n}\r\n\r\nconst initialConstructor: TConstructorIngredientsState = {\r\n    constructorIngredients: [],\r\n    topBun: null,\r\n    bottomBun: null,\r\n\r\n};\r\n\r\nexport const constructorReducer = (state=initialConstructor, action: TConstructorActions): TConstructorIngredientsState => {\r\n    switch (action.type) {\r\n        case ADD_INGREDIENT_TO_CONSTRUCTOR: \r\n        const {ingredientType, name, image, price, _id} = action;\r\n            if (ingredientType === 'bun') {\r\n                return {\r\n                    ...state,\r\n                    topBun: {ingredientType, name, image, price, _id, uniqueId: nanoid()},\r\n                    bottomBun: { ingredientType, name, image, price, _id, uniqueId: nanoid()}\r\n                }\r\n            } else {\r\n                return {...state, constructorIngredients: [...state.constructorIngredients, {ingredientType, name, image, price, _id, uniqueId: nanoid()}]}\r\n        }\r\n\r\n        case DELETE_FROM_CONSTRUCTOR: {\r\n            return { ...state, constructorIngredients: [...state.constructorIngredients].filter(ingredient => ingredient.uniqueId !== action.uniqueId) };\r\n        }\r\n\r\n        case CHANGE_INGREDIENTS_ORDER: {\r\n            const dragItem = state.constructorIngredients.splice(action.dragIndex, 1);\r\n            const newArr= [\r\n                            ...state.constructorIngredients.slice(0, action.hoverIndex),\r\n                            dragItem[0],\r\n                            ...state.constructorIngredients.slice(action.hoverIndex, state.constructorIngredients.length)\r\n                        ]\r\n            return ({\r\n                ...state,\r\n                constructorIngredients: newArr\r\n            })\r\n        }\r\n\r\n        case RESET_CONSTRUCTOR: {\r\n            return {\r\n                ...state,\r\n                constructorIngredients: [],\r\n                topBun: null,\r\n                bottomBun: null\r\n            }\r\n        }\r\n\r\n        default: { \r\n            return state;\r\n        }\r\n    }\r\n}","import { TIngredientsActions } from './../actions/ingredients';\r\nimport {\r\n    GET_INGREDIENTS_REQUEST,\r\n    GET_INGREDIENTS_SUCCESS,\r\n    GET_INGREDIENTS_ERROR,\r\n    SET_INGREDIENT_DETAILS,\r\n} from '../constants';\r\nimport { TIngredient } from '../types/data';\r\n\r\nexport type TIngredientsState = {\r\n    ingredients: TIngredient[],\r\n    ingredientsRequest: boolean,\r\n    ingredientsError: boolean,\r\n    ingredientDetails: TIngredient | null\r\n}\r\n\r\nconst initialState: TIngredientsState = {\r\n    ingredients: [],\r\n    ingredientsRequest: false,\r\n    ingredientsError: false,\r\n    ingredientDetails: null,\r\n};\r\n\r\nexport const ingredientsReducer = (state = initialState, action: TIngredientsActions): TIngredientsState => {\r\n    switch (action.type) {\r\n        case GET_INGREDIENTS_REQUEST: {\r\n            return {\r\n                ...state,\r\n                ingredientsRequest: true\r\n            };\r\n        }\r\n\r\n        case GET_INGREDIENTS_SUCCESS: {\r\n            return { ...state, ingredientsError: false, ingredients: action.ingredients, ingredientsRequest: false };\r\n        }\r\n\r\n        case GET_INGREDIENTS_ERROR: {\r\n            return { ...state, ingredientsError: true, ingredientsRequest: false };\r\n        }   \r\n        \r\n        case SET_INGREDIENT_DETAILS: {\r\n            return {\r\n                ...state,\r\n                ingredientsRequest: false,\r\n                ingredientsError: false,\r\n                ingredientDetails: action.ingredient\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n","import { TOrder } from './../types/data';\r\nimport { TOrderActions } from '../actions/order';\r\nimport {\r\n    GET_ORDER_NUMBER_REQUEST,\r\n    GET_ORDER_NUMBER_SUCCESS,\r\n    GET_ORDER_NUMBER_ERROR,\r\n    GET_ORDER_CARD_DETAILS_REQUEST,\r\n    GET_ORDER_CARD_DETAILS_SUCCESS,\r\n    GET_ORDER_CARD_DETAILS_ERROR\r\n} from '../constants';\r\n\r\nexport type TOrderInitialState = {\r\n    orderRequest: boolean,\r\n    orderId: null | string,\r\n    orderRequestError: boolean,\r\n    isShownOrderDetails: boolean,\r\n    orderCardDetails: TOrder | []\r\n}\r\n\r\nexport const initialState: TOrderInitialState = {\r\n    orderRequest: false,\r\n    orderId: null,\r\n    orderRequestError: false,\r\n    isShownOrderDetails: false,\r\n    orderCardDetails: []\r\n}\r\n\r\nexport const orderReducer = ( state=initialState, action: TOrderActions ) => {\r\n    switch (action.type) {\r\n        case GET_ORDER_NUMBER_REQUEST: {\r\n            return {\r\n                ...state,\r\n                orderRequest: true,\r\n                orderId: null,\r\n            };\r\n        }\r\n        case GET_ORDER_NUMBER_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                orderRequest: false,\r\n                orderRequestError: false,\r\n                orderId: action.orderId,\r\n            }\r\n        }\r\n        case GET_ORDER_NUMBER_ERROR: {\r\n            return {\r\n                ...state,\r\n                orderRequestError: true,\r\n                orderRequest: false\r\n            }\r\n        }\r\n\r\n        case GET_ORDER_CARD_DETAILS_REQUEST: {\r\n            return {\r\n                ...state,\r\n                orderRequest: true\r\n            }\r\n        }\r\n        case GET_ORDER_CARD_DETAILS_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                orderRequest: false,\r\n                orderCardDetails: action.orderCardDetails\r\n            }\r\n        }\r\n        case GET_ORDER_CARD_DETAILS_ERROR: {\r\n            return {\r\n                ...state,\r\n                orderRequest: false,\r\n                orderCardDetails: [],\r\n                orderRequestError: true\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    };\r\n}","import {\r\n    GET_USER_DATA_REQUEST,\r\n    GET_USER_DATA_ERROR,\r\n\r\n    GET_USER_REGISTER_SUCCESS,\r\n    GET_USER_LOGIN_SUCCESS,\r\n    GET_USER_FORGOT_PASSWORD_SUCCESS,\r\n    GET_USER_RESET_PASSWORD_SUCCESS,\r\n    GET_USER_INFO_SUCCESS,\r\n    GET_USER_REFRESH_TOKEN_SUCCESS,\r\n    GET_USER_INFO_UPDATE_SUCCESS,\r\n    GET_USER_LOGOUT_SUCCESS\r\n} from '../constants';\r\nimport { TUser } from '../types/data';\r\nimport { TUserActions } from '../actions/user';\r\n\r\nexport type TUserDataState = {\r\n    user: TUser | null;\r\n    userDataRequest: boolean;\r\n    userDataError: boolean;\r\n    isUserLoggedIn: boolean;\r\n    getUserEmail: boolean;\r\n    isResetPassword: boolean\r\n}\r\n\r\nconst initialState: TUserDataState = {\r\n    user: null,\r\n    userDataRequest: false,\r\n    userDataError: false,\r\n    isUserLoggedIn: false,\r\n    getUserEmail: false,\r\n    isResetPassword: false\r\n}\r\n\r\nexport const userReducer = ( state=initialState, action: TUserActions ): TUserDataState => {\r\n    switch (action.type) {\r\n        case GET_USER_DATA_REQUEST: {\r\n            return { \r\n                ...state, \r\n                userDataRequest: true \r\n            };\r\n        }\r\n\r\n        case GET_USER_LOGIN_SUCCESS: {\r\n            return {\r\n                ...state, \r\n                userDataRequest: false, \r\n                userDataError: false,\r\n                user: action.user,\r\n                isUserLoggedIn: true\r\n            };\r\n        }\r\n\r\n        case GET_USER_REGISTER_SUCCESS: {\r\n            return { \r\n                ...state, \r\n                userDataRequest: false, \r\n                userDataError: false,\r\n                user: action.user,\r\n            }\r\n        }\r\n\r\n        case GET_USER_LOGOUT_SUCCESS: {\r\n            return { \r\n                user: null,\r\n                userDataRequest: false,\r\n                userDataError: false,\r\n                isUserLoggedIn: false,\r\n                getUserEmail: false,\r\n                isResetPassword: false\r\n            }\r\n        }\r\n\r\n        case GET_USER_FORGOT_PASSWORD_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                userDataRequest: false,\r\n                getUserEmail: true,\r\n            }\r\n        }\r\n\r\n        case GET_USER_RESET_PASSWORD_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                userDataRequest: false,\r\n                isResetPassword: true,\r\n            }\r\n        }\r\n\r\n        case GET_USER_DATA_ERROR: {\r\n            return {...state}\r\n        }\r\n\r\n        // case GET_USER_INFO_ERROR:\r\n        // case GET_USER_LOGIN_ERROR:\r\n        // case GET_USER_REGISTER_ERROR: \r\n        // case GET_USER_REFRESH_TOKEN_ERROR:\r\n        // {\r\n        //     return {\r\n        //         ...state,\r\n        //         userDataRequest: false,\r\n        //         userDataError: true,\r\n        //         user: null,\r\n        //         isUserLoggedIn: false   \r\n        // }}\r\n\r\n        case GET_USER_INFO_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                userDataRequest: false,\r\n                user: action.user,\r\n                isUserLoggedIn: true,\r\n            }\r\n        }\r\n\r\n        case GET_USER_REFRESH_TOKEN_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                userDataError: false,\r\n                isUserLoggedIn: true,\r\n            }\r\n        } \r\n\r\n        case GET_USER_INFO_UPDATE_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                user: action.user\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}","import { TWebsocketsActions } from './../actions/websockets';\r\nimport {\r\n    WS_CONNECTION_SUCCESS,\r\n    WS_CONNECTION_ERROR,\r\n    WS_CONNECTION_CLOSED,\r\n    WS_GET_ORDERS,\r\n    WS_SEND_MESSAGE\r\n} from '../constants';\r\nimport { TOrder } from '../types/data';\r\n\r\nexport type TWebsocketsState = {\r\n    wsConnected: boolean,\r\n    feedOrders: TOrder[] | [],\r\n    total: number | null,\r\n    totalToday: number | null\r\n}\r\n\r\nexport const initialState: TWebsocketsState = {\r\n    wsConnected: false,\r\n    feedOrders: [],\r\n    total: null,\r\n    totalToday: null,\r\n};\r\n\r\nexport const wsReducer = ( state=initialState, action: TWebsocketsActions ): TWebsocketsState => {\r\n    switch(action.type) {\r\n        case  WS_CONNECTION_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                wsConnected: true\r\n            }\r\n        }\r\n        case WS_CONNECTION_ERROR: {\r\n            return initialState;\r\n        }\r\n        case WS_CONNECTION_CLOSED: {\r\n            return {\r\n                ...state,\r\n                wsConnected: false\r\n            };\r\n        }\r\n        case WS_GET_ORDERS: {\r\n            return {\r\n                ...state,\r\n                feedOrders: action.payload.orders,\r\n                total: action.payload.total,\r\n                totalToday: action.payload.totalToday\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { constructorReducer } from './constructor-reducer';\r\nimport { ingredientsReducer } from './ingredients';\r\nimport { orderReducer } from './order';\r\nimport { userReducer } from './user';\r\nimport { wsReducer } from './websockets';\r\n\r\nexport const rootReducer = combineReducers({\r\n    ingredients: ingredientsReducer,\r\n    constructorStore: constructorReducer,\r\n    order: orderReducer,\r\n    userData: userReducer,\r\n    wsStore: wsReducer\r\n  });\r\n\r\n","import { \r\n    applyMiddleware, \r\n    createStore, \r\n    compose, \r\n    Action,\r\n    ActionCreator \r\n} from 'redux';\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport thunk from \"redux-thunk\";\r\nimport { actionsAll } from './actions';\r\nimport { rootReducer } from './reducers/index';\r\nimport { wsMiddleware } from './middleware/ws-middleware';\r\nimport {\r\n    WS_CONNECTION_CLOSED,\r\n    WS_CONNECTION_ERROR,\r\n    WS_CONNECTION_START,\r\n    WS_CONNECTION_START_PROFILE,\r\n    WS_CONNECTION_SUCCESS,\r\n    WS_GET_ORDERS,\r\n    WS_SEND_MESSAGE\r\n} from './constants';\r\n\r\nconst wsUrl = 'wss://norma.nomoreparties.space/orders';\r\n\r\nexport const wsActions = {\r\n    wsStart: WS_CONNECTION_START,\r\n    wsStartProfile: WS_CONNECTION_START_PROFILE,\r\n    wsSendMessage: WS_SEND_MESSAGE,\r\n    onOpen: WS_CONNECTION_SUCCESS,\r\n    onClose: WS_CONNECTION_CLOSED,\r\n    onError: WS_CONNECTION_ERROR,\r\n    getFeedOrders: WS_GET_ORDERS,\r\n};\r\n\r\nconst wsFeedOrdersMiddleware = wsMiddleware(wsUrl, wsActions);\r\n\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__? : typeof compose;\r\n    }\r\n}\r\n\r\nconst composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(\r\n    thunk, wsFeedOrdersMiddleware\r\n));\r\n\r\nexport const store = createStore(rootReducer, enhancer);\r\nexport type RootState = ReturnType<typeof rootReducer>\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type AppThunk<ReturnType = void> = ActionCreator<\r\n    ThunkAction<ReturnType, Action, RootState, actionsAll>\r\n>;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './components/app/app';\nimport { store } from './services/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter basename='/react-burger'>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"profile_container__15mtc\",\"wrapper\":\"profile_wrapper__rU96U\",\"left\":\"profile_left__Fj7y1\",\"right\":\"profile_right__1nBRC\",\"link\":\"profile_link__inIC8\",\"footer\":\"profile_footer__3Niae\",\"text\":\"profile_text__3BiyX\",\"buttons\":\"profile_buttons__3Ax8D\",\"reject\":\"profile_reject__7dr0o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"app-header_header__3Pljy\",\"nav\":\"app-header_nav__3Ylne\",\"text\":\"app-header_text__3Nv8w\",\"secondarytext\":\"app-header_secondarytext__2iaVg app-header_text__3Nv8w\",\"container\":\"app-header_container__MDmA9\",\"logocontainer\":\"app-header_logocontainer__3ueM1\",\"link\":\"app-header_link__23Xzg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"order_container__M9Qi7\",\"div\":\"order_div__1FcfC\",\"line\":\"order_line__JyQgk\",\"link\":\"order_link__7TL3b\",\"icons\":\"order_icons__3tbJi\",\"icon\":\"order_icon__11cYg\",\"wrapper\":\"order_wrapper__IlwRr\",\"price\":\"order_price__Fu8Jl\",\"last\":\"order_last__1DPgh\",\"lastAmount\":\"order_lastAmount__2Ak3i\",\"svg\":\"order_svg__1jopr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"order-page_section__FeTGn\",\"header\":\"order-page_header__31hT-\",\"ingredientsList\":\"order-page_ingredientsList__wNH7n\",\"item\":\"order-page_item__3mX-3\",\"link\":\"order-page_link__1zE8W\",\"status\":\"order-page_status__2149Z\",\"right\":\"order-page_right__2Pmcj\",\"left\":\"order-page_left__3nGBt\",\"icon\":\"order-page_icon__3V1bt\",\"line\":\"order-page_line__1vdyX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"order-info_section__yHJwT\",\"header\":\"order-info_header__2bCGV\",\"ingredientsList\":\"order-info_ingredientsList__3smJj\",\"item\":\"order-info_item__3auNG\",\"link\":\"order-info_link__3d1qF\",\"status\":\"order-info_status__1Dl0p\",\"right\":\"order-info_right__ycS7u\",\"left\":\"order-info_left__1sFCt\",\"icon\":\"order-info_icon__3ILVM\",\"line\":\"order-info_line__1vaLY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"feed_container__74evi\",\"wrapper\":\"feed_wrapper__8F5cO\",\"section\":\"feed_section__iUMeE\",\"list\":\"feed_list__RP0d3\",\"orderItem\":\"feed_orderItem__2qrbq\",\"link\":\"feed_link__P-Lda\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ingredient-details_container__2R7kq\",\"values\":\"ingredient-details_values__1OGIw\",\"image\":\"ingredient-details_image__1L4dO\",\"valueItem\":\"ingredient-details_valueItem__15-04\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"burger-constructor_container__aSlIY\",\"orders\":\"burger-constructor_orders__1wWih\",\"mainIngredientsList\":\"burger-constructor_mainIngredientsList__7NYUy burger-constructor_orders__1wWih\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"burger-ingredients_section__1chj-\",\"ingredientList\":\"burger-ingredients_ingredientList__MFA6X\",\"item\":\"burger-ingredients_item__2UvlD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredientCard\":\"ingredient_ingredientCard__3IFP3\",\"name\":\"ingredient_name__2Gi7o\",\"price\":\"ingredient_price__1WX1f\",\"image\":\"ingredient_image__3OPQT\",\"link\":\"ingredient_link__1DrVx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__94xGV\",\"modalHeader\":\"modal_modalHeader__8uKam\",\"modalHeaderRight\":\"modal_modalHeaderRight__1lq3m modal_modalHeader__8uKam\",\"closeButton\":\"modal_closeButton__V4b5W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"tabs_tabs__1pLFo\",\"item\":\"tabs_item__3Wmix\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"orders-history_container__1VgD-\",\"list\":\"orders-history_list__3jXU_\",\"link\":\"orders-history_link__2k5JU\",\"orderItem\":\"orders-history_orderItem__hc1LG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ingredients-type_container__1lEx-\",\"list\":\"ingredients-type_list__10J6K\",\"ingredientItem\":\"ingredients-type_ingredientItem__3Bvhj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"registration_wrapper__d9Tyv\",\"title\":\"registration_title__2l9Am\",\"container\":\"registration_container__2536Y\",\"form\":\"registration_form__1u95j\",\"additional\":\"registration_additional__2CMBf\",\"line\":\"registration_line__1Hv_k\",\"link\":\"registration_link__1NFjN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__T_GMA\",\"container\":\"app_container__af3ku\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"constructor-footer_container__2DYLf\",\"price\":\"constructor-footer_price__1TqZi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"not-found-page_container__1FXsG\",\"link\":\"not-found-page_link__2GYQl\"};"],"sourceRoot":""}